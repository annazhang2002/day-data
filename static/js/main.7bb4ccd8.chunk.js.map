{"version":3,"sources":["firebase.js","static/data.js","static/util.js","components/ListTags/ListTags.js","components/FieldInput/FieldInput.js","pages/LogFormPage/index.js","pages/LogFormPage/LogFormPage.js","pages/DataPage/util.js","pages/DataPage/components/CompareData.js","pages/DataPage/components/AverageData.js","pages/DataPage/index.js","pages/DataPage/DataPage.js","pages/TablePage/index.js","pages/TablePage/TablePage.js","pages/TabContent/index.js","pages/TabContent/TabContent.js","pages/LoginPage/index.js","pages/LoginPage/LoginPage.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","dataRef","collection","provider","GoogleAuthProvider","dataFields","date","type","name","tableHeader","editInTable","rating","min","max","ratingField","excitement","stress","activities","new","add","hadBreakfast","dressup","exercise","food","journaled","peopleSaw","readingTime","showered","skincare","weather","defaultDataState","Date","newActivity","newExercise","newFood","newPerson","colors","parseIntVals","Object","keys","_","pickBy","field","parseBooleanVals","parsedValue","id","val","oldVal","includes","parseInt","ListTags","props","data","onDelete","fieldKey","style","flexDirection","map","item","index","Label","color","paddingTop","paddingBottom","marginTop","Icon","onClick","FieldInput","dataValue","onDeleteFromArray","dataFromKey","handleChange","newArrayValue","addToDataArray","onArrayInputChanged","Input","value","onChange","label","Button","e","labelPosition","Checkbox","checked","toISOString","split","placeholder","LogFormPage","useState","setData","showModal","setShowModal","event","target","input","detail","concat","Form","entries","key","Field","inline","without","deleteFromArray","primary","finalData","omit","user","currentUser","uid","console","log","then","_doc","catch","error","Modal","size","open","onClose","Content","Actions","positive","changeTab","allFields","allOperators","arrayFields","filter","allRatingFields","fieldSelectionOptions","operatorSelectionOptions","operator","CompareData","setField","setRatingField","ratingArr","setRatingArr","Grid","stackable","columns","Row","Column","Dropdown","fluid","selection","options","where","onSnapshot","querySnapshot","ratings","forEach","doc","values","sum","count","ratingArray","average","push","reverse","sortBy","AverageData","queryData","setQueryData","happiness","setAverage","DataPage","Divider","TablePage","tableValues","setTableValues","rowIndex","fieldName","fieldValue","inUse","editField","setEditField","loading","setLoading","newListItem","setNewListItem","rowToDelete","setRowToDelete","useEffect","orderBy","queryTableValues","row","newRowValues","header","cellValue","seconds","show","displayValue","Array","isArray","toDateString","disabled","toggleEditCell","addValuetoArray","newProp","className","rowId","data-label","onInputChanged","itemValue","itemVal","oldValue","newFieldValue","update","signOut","Confirm","content","confirmButton","onCancel","onConfirm","delete","TabContent","activeTab","setActiveTab","panes","menuItem","render","Tab","Pane","activeIndex","onTabChange","LoginPage","Container","textAlign","Header","as","signInWithPopup","response","MainPage","loggedIn","toggleLogin","onAuthStateChanged","Loader","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+WAeAA,IAASC,cAXc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,qDACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIZ,IAAMC,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YACrBC,EAAUD,EAAUE,WAAW,cAC/BC,EAAW,IAAId,IAASU,KAAKK,mB,qECjB7BC,EAAa,CACtBC,KAAM,CACFC,KAAM,OACNC,KAAM,SACNC,YAAa,OACbC,aAAa,GAEjBC,OAAQ,CACJJ,KAAM,SACNC,KAAM,4BACNI,IAAK,EACLC,IAAK,GACLJ,YAAa,YACbC,aAAa,EACbI,aAAa,GAEjBC,WAAY,CACRR,KAAM,SACNC,KAAM,0BACNI,IAAK,EACLC,IAAK,GACLJ,YAAa,aACbC,aAAa,EACbI,aAAa,GAEjBE,OAAQ,CACJT,KAAM,SACNC,KAAM,+BACNI,IAAK,EACLC,IAAK,GACLJ,YAAa,SACbC,aAAa,EACbI,aAAa,GAEjBG,WAAY,CACRV,KAAM,QACNC,KAAM,cACNU,IAAK,cACLC,IAAK,WACLV,YAAa,aACbC,aAAa,GAEjBU,aAAc,CACVb,KAAM,WACNC,KAAM,iBACNC,YAAa,YACbC,aAAa,GAEjBW,QAAS,CACLd,KAAM,WACNC,KAAM,+BACNC,YAAa,aACbC,aAAa,GAEjBY,SAAU,CACNf,KAAM,QACNC,KAAM,YACNU,IAAK,cACLC,IAAK,WACLV,YAAa,WACbC,aAAa,GAEjBa,KAAM,CACFhB,KAAM,QACNC,KAAM,QACNU,IAAK,UACLC,IAAK,OACLV,YAAa,OACbC,aAAa,GAEjBc,UAAW,CACPjB,KAAM,WACNC,KAAM,iBACNC,YAAa,YACbC,aAAa,GAEjBe,UAAW,CACPlB,KAAM,QACNC,KAAM,gBACNU,IAAK,YACLC,IAAK,SACLV,YAAa,eACbC,aAAa,GAEjBgB,YAAa,CACTnB,KAAM,SACNC,KAAM,6BACNI,IAAK,EACLC,IAAK,KACLJ,YAAa,eACbC,aAAa,GAEjBiB,SAAU,CACNpB,KAAM,WACNC,KAAM,gBACNC,YAAa,WACbC,aAAa,GAEjBkB,SAAU,CACNrB,KAAM,WACNC,KAAM,gCACNC,YAAa,WACbC,aAAa,GAEjBmB,QAAS,CACLtB,KAAM,OACNC,KAAM,WACNC,YAAa,UACbC,aAAa,IAIRoB,EAAmB,CAC5Bb,WAAY,GACZX,KAAM,IAAIyB,KACVV,SAAS,EACTC,SAAU,GACVC,KAAM,GACNH,cAAc,EACdI,WAAW,EACXQ,YAAa,GACbC,YAAa,GACbC,QAAS,GACTC,UAAW,GACXV,UAAW,GACXE,UAAU,EACVC,UAAU,EACVjB,OAAQ,EACRI,WAAY,EACZC,OAAQ,EACRU,YAAa,EACbG,QAAS,IAIAO,EAAS,CAClB,WAAc,OACd,KAAQ,SACR,SAAY,OACZ,UAAa,UAOJC,EAAeC,OAAOC,KAAKC,IAAEC,OAAOpC,GAAY,SAACqC,GAAD,MAA0B,WAAfA,EAAMnC,SACjEoC,EAAmBL,OAAOC,KAAKC,IAAEC,OAAOpC,GAAY,SAACqC,GAAD,MAA0B,aAAfA,EAAMnC,SC3IrEqC,EAAc,SAACC,EAAIC,EAAKC,GACjC,OAAIV,EAAaW,SAASH,GACfI,SAASH,GACTH,EAAiBK,SAASH,IACzBE,EACM,SAAPF,EACA,IAAId,KAAKe,EAAM,KAEfA,G,sFCbFI,EAAW,SAACC,GAAW,IACxBC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAExB,OACI,qBAAKC,MAAO,CAAEC,cAAe,OAA7B,SACKJ,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACN,eAACC,EAAA,EAAD,CAAmBC,ODLVhB,ECK0BS,EDJxClB,EAAOS,ICI4CU,MAAO,CAAEO,WAAY,cAAeC,cAAe,cAAeC,UAAW,OAA3H,UACKN,EACD,cAACO,EAAA,EAAD,CAAMzD,KAAK,SAAS0D,QAAS,kBAAMb,EAASK,QAFpCC,GDLJ,IAACd,QEFZsB,EAAa,SAAChB,GAAW,IAC1BiB,EAA0HjB,EAA1HiB,UAAWC,EAA+GlB,EAA/GkB,kBAAmBC,EAA4FnB,EAA5FmB,YAAahB,EAA+EH,EAA/EG,SAAUiB,EAAqEpB,EAArEoB,aAAcC,EAAuDrB,EAAvDqB,cAAeC,EAAwCtB,EAAxCsB,eAAgBC,EAAwBvB,EAAxBuB,oBAE1G,MAAuB,UAAnBN,EAAU7D,KAEN,gCACI,cAACoE,EAAA,EAAD,CACIpE,KAAK,OACLsC,GAAIuB,EAAUlD,IACd0D,MAAOJ,GAAiB,GACxBK,SAAUH,GAAuBH,EACjCO,MAAO,eAACC,EAAA,EAAD,CAAQlC,GAAIS,EAAUY,QAAS,SAACc,GAAD,OAAOP,EAAeO,EAAGZ,EAAUlD,MAAlE,iBAA6EkD,EAAUjD,OAC9F8D,cAAc,UAClB,cAAC,EAAD,CAAU7B,KAAMkB,EAAajB,SAAUgB,EAAmBf,SAAUA,OAGlD,WAAnBc,EAAU7D,KACV,cAACoE,EAAA,EAAD,CAAOpE,KAAM6D,EAAU7D,KAAMK,IAAKwD,EAAUxD,IAAKC,IAAKuD,EAAUvD,IAAKgC,GAAIS,EAAUsB,MAAON,EAAaO,SAAUN,IAC9F,aAAnBH,EAAU7D,KACV,cAAC2E,EAAA,EAAD,CAAU3E,KAAM6D,EAAU7D,KAAMsC,GAAIS,EAAU6B,QAASb,EAAaO,SAAUN,IAC3D,SAAnBH,EAAU7D,KACV,cAACoE,EAAA,EAAD,CAAOpE,KAAM6D,EAAU7D,KAAMsC,GAAIS,EAAUsB,MAAON,EAAYc,cAAcC,MAAM,KAAK,GAAIR,SAAUN,IAErG,cAACI,EAAA,EAAD,CAAOW,YAAalB,EAAU5D,KAAMD,KAAM6D,EAAU7D,KAAMsC,GAAIS,EAAUsB,MAAON,EAAaO,SAAUN,KC1BtGgB,ECQY,SAACpC,GAAW,IAAD,EACVqC,mBAAS1D,GADC,mBAC3BsB,EAD2B,KACrBqC,EADqB,OAEAD,oBAAS,GAFT,mBAE3BE,EAF2B,KAEhBC,EAFgB,KAqB5BpB,EAAe,SAACqB,GAAW,IAAD,EACNA,EAAMC,OAApBhD,EADoB,EACpBA,GAAI+B,EADgB,EAChBA,MACZa,EAAQ,2BACDrC,GADA,kBAEFP,EAAKD,EAAYC,EAAI+B,EAAOxB,EAAKP,QAIpC4B,EAAiB,SAACmB,EAAOE,GAAW,IAGQ,EAFtCjD,EAAO+C,EAAMC,OAAbhD,GAEa,IAAjB+C,EAAMG,QAAgC,KAAhB3C,EAAK0C,IAC3BL,EAAQ,2BACDrC,GADA,uBAEFP,EAAKL,IAAEwD,OAAO5C,EAAKP,GAAK,CAACO,EAAK0C,MAF5B,cAGFA,EAAQ,IAHN,MAef,OACI,eAACG,EAAA,EAAD,WACK3D,OAAO4D,QAAQ7F,GAAYoD,KAAI,YAAmB,IAAD,mBAAhB0C,EAAgB,KAAXvB,EAAW,KAC9C,OAAO,eAACqB,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAAlB,UACH,gCAAQzB,EAAMpE,OACd,cAAC,EAAD,CACI4D,UAAWQ,EACXtB,SAAU6C,EACV7B,YAAalB,EAAK+C,GAClB5B,aAAcA,EACdF,kBAAmB,SAACX,GAAD,OAjBf,SAACkB,EAAOuB,GAC5BV,EAAQ,2BACDrC,GADA,kBAEF+C,EAAM3D,IAAE8D,QAAQlD,EAAK+C,GAAMvB,MAca2B,CAAgB7C,EAAMyC,IACnD3B,cAAepB,EAAKwB,EAAM1D,KAC1BuD,eAAgBA,MATO0B,MAanC,cAACpB,EAAA,EAAD,CAAQyB,SAAO,EAACtC,QA3DR,WACZ,IAAIuC,EAAYjE,IAAEkE,KAAKtD,EAAM,CAAC,cAAe,cAAe,YAAa,UAAW,KACpFqD,EAAS,2BAAQA,GAAR,IAAmBE,KAAM5G,EAAK6G,YAAYC,MACnDC,QAAQC,IAAIN,GACZxG,EACKkB,IAAIsF,GACJO,MAAK,SAACC,GACHxB,EAAQ3D,GACR6D,GAAa,MAEhBuB,OAAM,SAACC,GACJL,QAAQC,IAAI,MAAQI,OAgDxB,qBACA,eAACC,EAAA,EAAD,CACIC,KAAK,OACLC,KAAM5B,EACN6B,QAAS,kBAAM5B,GAAa,IAHhC,UAKI,cAACyB,EAAA,EAAMI,QAAP,uCACA,cAACJ,EAAA,EAAMK,QAAP,UACI,cAAC1C,EAAA,EAAD,CAAQ2C,UAAQ,EAACxD,QAAS,kBAAMf,EAAMwE,UAAU,IAAhD,yBC9EPC,G,OAAYtF,OAAOC,KAAKlC,IACxBwH,EAAe,CAAC,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,kBAClDC,EAActF,IAAEuF,OAAOzF,OAAO4D,QAAQ7F,IAAa,8CAAiC,UAAjC,KAAwBE,QAAkBkD,KAAI,0CACjGuE,EAAkBxF,IAAEuF,OAAOzF,OAAO4D,QAAQ7F,IAAa,oDAAwBS,eAAa2C,KAAI,YAAmB,IAAD,mBAAhB0C,EAAgB,KAC3H,MAAO,CACH,IAAOA,EACP,KAHuH,KAGzG1F,YACd,MAAS0F,EACT,GAAM,YAID8B,EAAwB3F,OAAO4D,QAAQ7F,GAAYoD,KAAI,YAAmB,IAAD,mBAAhB0C,EAAgB,KAClF,MAAO,CACH,IAAOA,EACP,KAH8E,KAGhE1F,YACd,MAAS0F,EACT,GAAM,YAID+B,EAA2BL,EAAapE,KAAI,SAAC0E,GACtD,MAAO,CACH,IAAOA,EACP,KAAQA,EACR,MAASA,EACT,GAAM,e,kBCtBDC,EAAc,WAAO,IAAD,EACH5C,mBAASoC,EAAU,IADhB,mBACtBlF,EADsB,KACf2F,EADe,OAES7C,mBAASwC,EAAgB,GAAGpD,OAFrC,mBAEtB9D,EAFsB,KAETwH,EAFS,OAGK9C,mBAAS,IAHd,mBAGtB+C,EAHsB,KAGXC,EAHW,KAI7B1B,QAAQC,IAAIiB,GACZlB,QAAQC,IAAIjG,GAsDZ,OACI,gCACI,iEACA,cAAC2H,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACI,eAACF,EAAA,EAAKG,IAAN,WACI,cAACH,EAAA,EAAKI,OAAN,UACI,cAACC,EAAA,EAAD,CACIxD,YAAY,QACZyD,OAAK,EACLC,WAAS,EACTC,QAAShB,EACTpF,GAAG,QACHgC,SAAU,SAACe,EAAD,OAAUhB,EAAV,EAAUA,MAAV,OAAsByD,EAASzD,QAEjD,cAAC6D,EAAA,EAAKI,OAAN,UACI,cAACC,EAAA,EAAD,CACIxD,YAAY,eACZyD,OAAK,EACLC,WAAS,EACTC,QAASjB,EACTnF,GAAG,cACHgC,SAAU,SAACe,EAAD,OAAUhB,EAAV,EAAUA,MAAV,OAAsB0D,EAAe1D,QAEvD,cAAC6D,EAAA,EAAKI,OAAN,UACI,cAAC9D,EAAA,EAAD,CAAQlC,GAAG,aAAaqB,QAAS,SAACc,GA3ElD/E,EACKiJ,MAAM,OAAQ,KAAMnJ,EAAK6G,YAAYC,KACrCsC,YACG,SAAAC,GACI,IAAIC,EAAU,GACdD,EAAcE,SAAQ,SAACC,GACnB,IAAMC,EAASD,EAAInG,OAAOV,GACpB/B,EAAS4I,EAAInG,OAAOtC,GACrBgH,EAAY9E,SAASN,GAWtB8G,EAAOF,SAAQ,SAAA1E,GACPtC,OAAOC,KAAK8G,GAASrG,SAAS4B,IAC9ByE,EAAQzE,GAAO6E,KAAO9I,EACtB0I,EAAQzE,GAAO8E,SAEfL,EAAQzE,GAAS,CACb6E,IAAK9I,EACL+I,MAAO,MAjBfpH,OAAOC,KAAK8G,GAASrG,SAASwG,IAC9BH,EAAQG,GAAQC,KAAO9I,EACvB0I,EAAQG,GAAQE,SAEhBL,EAAQG,GAAU,CACdC,IAAK9I,EACL+I,MAAO,MAkBvB,IAAIC,EAAc,GAClBrH,OAAO4D,QAAQmD,GAASC,SAAQ,SAAC3I,GAAY,IAAD,EACnBA,EADmB,mBACjCwF,EADiC,KAC5BvB,EAD4B,KAExCjE,EAAS,CACLiE,MAAOuB,EACPyD,QAAShF,EAAM6E,IAAM7E,EAAM8E,OAE/BC,EAAYE,KAAKlJ,MAErBgJ,EAAcnH,IAAEsH,QAAQtH,IAAEuH,OAAOJ,EAAa,YAC9CnB,EAAamB,MAEjB,SAAAxC,GACIL,QAAQC,IAAII,OA6BR,+BAIXoB,EAAU9E,KAAI,SAAC9C,GAAD,OAAa,+BAAKA,EAAOiE,MAAZ,KAAqBjE,EAAOiJ,kBCxFvDI,EAAc,WAAO,IAAD,EAEKxE,mBAAS,CACvC9C,MAAOkF,EAAU,GACjBO,SAAUN,EAAa,GACvBjD,MAAO,KALkB,mBAEtBqF,EAFsB,KAEXC,EAFW,OAOC1E,mBAAS,CACnC2E,UAAW,EACXpJ,WAAY,EACZC,OAAQ,IAViB,mBAOtB4I,EAPsB,KAObQ,EAPa,KAcvB7F,EAAe,SAACqB,EAAOhB,EAAO/B,GAChCqH,EAAa,2BACND,GADK,kBAEPpH,EAAK+B,MA8Bd,OACI,gCACI,+DACA,cAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACI,eAACF,EAAA,EAAKG,IAAN,WACI,cAACH,EAAA,EAAKI,OAAN,UACI,cAACC,EAAA,EAAD,CACIxD,YAAY,QACZyD,OAAK,EACLC,WAAS,EACTC,QAAShB,EACTpF,GAAG,QACHgC,SAAU,SAACe,EAAD,OAAUhB,EAAV,EAAUA,MAAV,OAAsBL,EAAaqB,EAAOhB,EAAO,cAEnE,cAAC6D,EAAA,EAAKI,OAAN,UACI,cAACC,EAAA,EAAD,CACIxD,YAAY,WACZyD,OAAK,EACLC,WAAS,EACTC,QAASf,EACTrF,GAAG,WACHgC,SAAU,SAACe,EAAD,OAAUhB,EAAV,EAAUA,MAAV,OAAsBL,EAAaqB,EAAOhB,EAAO,iBAEnE,cAAC6D,EAAA,EAAKI,OAAN,UACI,cAAClE,EAAA,EAAD,CAAOW,YAAY,QAAQyD,OAAK,EAACxI,KAAK,OAAOsC,GAAG,QAAQ+B,MAAOqF,EAAUrF,MAAOC,SAAU,SAACe,EAAD,OAAUhB,EAAV,EAAUA,MAAV,OAAsBL,EAAaqB,EAAOhB,EAAO,cAE/I,cAAC6D,EAAA,EAAKI,OAAN,UACI,cAAC9D,EAAA,EAAD,CAAQlC,GAAG,aAAaqB,QAAS,SAACc,GApDlD/E,EACKiJ,MAAM,OAAQ,KAAMnJ,EAAK6G,YAAYC,KACrCqC,MAAMe,EAAUvH,MAAOuH,EAAU9B,SAAU8B,EAAUrF,OACrDuE,YACG,SAAAC,GACI,IAAIe,EAAY,EACZpJ,EAAa,EACbC,EAAS,EACboI,EAAcE,SAAQ,SAACC,GACnBY,GAAaZ,EAAInG,OAAOzC,OACxBI,GAAcwI,EAAInG,OAAOrC,WACzBC,GAAUuI,EAAInG,OAAOpC,UAEzBoJ,EAAW,CACPD,UAAWA,EAAYf,EAAc/B,KACrCtG,WAAYA,EAAaqI,EAAc/B,KACvCrG,OAAQA,EAASoI,EAAc/B,UAGvC,SAAAF,GACIL,QAAQC,IAAII,OAgCR,+BAIW,IAAtByC,EAAQO,WAAmB,6CAAgBP,EAAQO,aAC5B,IAAvBP,EAAQ7I,YAAoB,8CAAiB6I,EAAQ7I,cAClC,IAAnB6I,EAAQ5I,QAAgB,0CAAa4I,EAAQ5I,c,SCrF3CqJ,ECKS,WACpB,OACI,gCACI,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,Q,SCVGC,G,OCSU,WAAO,IAAD,EACW/E,mBAAS,IADpB,mBACpBgF,EADoB,KACPC,EADO,OAEOjF,mBAAS,CACvCkF,SAAU,EACVC,UAAW,SACXC,WAAY,EACZC,OAAO,IANgB,mBAEpBC,EAFoB,KAETC,EAFS,OAQGvF,oBAAS,GARZ,mBAQpBwF,EARoB,KAQXC,EARW,OASWzF,qBATX,mBASpB0F,EAToB,KASPC,EATO,OAUO3F,oBAAS,GAVhB,mBAUpBE,EAVoB,KAUTC,EAVS,OAWWH,qBAXX,mBAWpB4F,EAXoB,KAWPC,EAXO,KAa3BC,qBAAU,WACNxE,QAAQC,IAAI,gCACZ9G,EACKiJ,MAAM,OAAQ,KAAMnJ,EAAK6G,YAAYC,KACrC0E,QAAQ,OAAQ,QAChBpC,YACG,SAAAC,GACI,IAAIoC,EAAmB,GACvBpC,EAAcE,SAAQ,SAACC,GACnB,IAAMkC,EAAMlC,EAAInG,OACZsI,EAAe,GACnBpJ,OAAO4D,QAAQ7F,GAAYoD,KAAI,YAAmB,IAAD,mBAAhB0C,EAAgB,KAAXvB,EAAW,KACvCgG,EAAaa,EAAItF,GACvBuF,EAAavF,GAAO,CAChBwF,OAAQ/G,EAAMnE,YACdmL,UAAWhB,aAAsBtI,QAAUsI,EAAWiB,QAAU,IAAI9J,KAA0B,IAArB6I,EAAWiB,SAAkBjB,EACtGkB,MAAM,EACNvL,KAAMqE,EAAMrE,SAGpBiL,EAAiBjC,EAAI1G,IAAM6I,KAE/BjB,EAAee,GACf1E,QAAQC,IAAIyE,GACZP,GAAW,MAEf,SAAA9D,GACIL,QAAQC,IAAII,QAGzB,CAAC6D,IAEJ,IAAMe,EAAe,SAACnH,EAAOuB,GACzB,OAAI6F,MAAMC,QAAQrH,GAEV,cAAC,EAAD,CAAUxB,KAAMwB,EAAOtB,SAAU6C,IAE9BvB,aAAiB7C,KACjB6C,EAAMsH,eACU,kBAATtH,EACP,cAACM,EAAA,EAAD,CAAUC,QAASP,EAAOuH,UAAQ,IAEtCvH,GAGLwH,EAAiB,SAAC1B,EAAUC,EAAWC,GACzCG,EAAa,CACTL,WACAC,YACAC,aACAC,OAAQC,EAAUD,SAmBpBwB,EAAkB,SAACrH,EAAGsH,GACxBvB,EAAa,2BAAKD,GAAN,IAAiBF,WAAYpI,IAAEwD,OAAO8E,EAAUF,WAAaM,MACzEC,EAAe,KAYnB,OACI,gCACI,6CACEH,GAAWR,GACT,wBAAO+B,UAAU,kBAAjB,UACI,gCACI,+BACKjK,OAAOkH,OAAOlH,OAAOkH,OAAOgB,GAAa,IAAI/G,KAAI,SAACf,EAAOiB,GACtD,OAAQ,oBAAgB4I,UAAU,WAA1B,SAAsC7J,EAAMiJ,QAAnChI,MAErB,iDAGR,gCACKrB,OAAO4D,QAAQsE,GAAa/G,KAAI,YAAmB,IAAD,mBAAhB+I,EAAgB,KAATf,EAAS,KAC/C,OACI,+BACKnJ,OAAO4D,QAAQuF,GAAKhI,KAAI,YAAmB,IAAD,mBAAhB0C,EAAgB,KAAXvB,EAAW,KACvC,OACI,oBAAI6H,aAAYtG,EAAhB,SACK2E,EAAUD,OAASC,EAAUH,YAAcxE,GAAO2E,EAAUJ,WAAa8B,EACtE,sBAAKD,UAAU,kBAAf,UACI,cAAC,EAAD,CACInI,UAAW/D,EAAW8F,GACtB7C,SAAU6C,EACV7B,YAAawG,EAAUF,WACvBrG,aAAc,SAACqB,GAAD,OAvD/C,SAACA,EAAOlD,GAC3BqI,EAAa,2BAAKD,GAAN,IAAiBF,WAAYhI,EAAYF,EAAOkD,EAAMC,OAAOjB,MAAOkG,EAAUF,eAsDb8B,CAAe9G,IACxClB,oBAAqB,SAACM,GAAD,OAAOmG,EAAenG,EAAEa,OAAOjB,QACpDP,kBAAmB,SAACsI,GAAD,OA9C7CC,EA8CiFD,OA7C3G5B,EAAa,2BAAKD,GAAN,IAAiBF,WAAYpI,IAAE8D,QAAQwE,EAAUF,WAAYgC,MADhD,IAACA,GA+C0BpI,cAAe0G,EACfzG,eAAgB4H,IACpB,cAACtH,EAAA,EAAD,CAAQb,QAAS,kBAxD/CrB,EAwDkE2J,EAxD9D7B,EAwDqExE,EAxD1D0G,EAwD+DjI,EAAMgH,UAxD3DkB,EAwDsEhC,EAAUF,gBAvD3H3K,EAAQsJ,IAAI1G,GAAIkK,OAAhB,eAA0BpC,EAAY/H,EAAY+H,EAAWmC,EAAeD,KAAa7F,MAAK,WAC1FoF,IACAnB,GAAW,MAHE,IAACpI,EAAI8H,EAAWkC,EAAUC,GAwDK,qBAEF,sBAAKP,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACKR,EAAanH,EAAMgH,UAAWzF,KAElCvB,EAAMkH,MAAQ,cAAC/G,EAAA,EAAD,CAAQwH,UAAU,WAAWlF,KAAK,OAAOnD,QAAS,kBAAMkI,EAAeI,EAAOrG,EAAKvB,EAAMgH,YAAzF,SAAqG,mBAAGW,UAAU,8BAlBnHpG,EAAMqG,MAuBxC,6BAAI,cAACzH,EAAA,EAAD,UAAQ,cAACd,EAAA,EAAD,CAAMzD,KAAK,SAAS0D,QAAS,WAAQmH,EAAemB,GAAQ7G,GAAa,YA1BhF6G,WAgC7B,cAACzH,EAAA,EAAD,CAAQb,QAAS,kBAAMnE,EAAKiN,WAA5B,oBACA,cAACC,EAAA,EAAD,CACI3F,KAAM5B,EACNwH,QAAQ,4CACRC,cAAc,SACdC,SAAU,kBAAMzH,GAAa,IAC7B0H,UAAW,kBA/DJb,EA+DoBpB,OA9DnCnL,EAAQsJ,IAAIiD,GAAOc,SAAStG,MAAK,WAC7BF,QAAQC,IAAI,kCACZpB,GAAa,MACduB,OAAM,SAACC,GACNL,QAAQK,MAAM,4BAA6BA,MALjC,IAACqF,GAgEPnF,KAAK,cChKNkG,ECMW,WAAO,IAAD,EACM/H,mBAAS,GADf,mBACrBgI,EADqB,KACVC,EADU,KAEtBC,EAAQ,CACV,CAAEC,SAAU,eAAgBC,OAAQ,kBAAM,cAACC,EAAA,EAAIC,KAAL,UAAU,cAAC,EAAD,CAAanH,MAAI,EAACgB,UAAW8F,QACjF,CAAEE,SAAU,gBAAiBC,OAAQ,kBAAM,cAACC,EAAA,EAAIC,KAAL,UAAU,cAAC,EAAD,CAAUnH,MAAI,QACnE,CACIgH,SAAU,aAAcC,OAAQ,kBAC5B,cAACC,EAAA,EAAIC,KAAL,UAAU,cAAC,EAAD,CAAWnH,MAAI,SAIrC,OACI,cAACkH,EAAA,EAAD,CAAKH,MAAOA,EAAOK,YAAaP,EAAWjB,UAAU,iBAAiByB,YAAa,SAAChJ,EAAD,OAAM+I,EAAN,EAAMA,YAAN,OAAwBN,EAAaM,O,kBClBjHE,G,OCIU,WAWrB,OACI,eAACC,EAAA,EAAD,CAAWC,UAAU,SAArB,UACI,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAK9B,UAAU,QAA1B,iCACA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAX,6FACA,cAACtJ,EAAA,EAAD,CAAQlB,MAAM,cAAcK,QAbf,WACjBnE,EAAKuO,gBAAgBnO,GAAU6G,MAAK,SAACuH,GACjCzH,QAAQC,IAAIwH,MACbrH,OAAM,SAACC,GACNL,QAAQC,IAAII,OASZ,sCCnBGqH,GCMS,WAAO,IAAD,EACMhJ,mBAA6B,MAApBzF,EAAK6G,aADpB,mBACnB6H,EADmB,KACTC,EADS,OAEIlJ,oBAAS,GAFb,mBAEnBwF,EAFmB,KAEVC,EAFU,KAe1B,OAXAK,qBAAU,WACNvL,EAAK4O,oBAAmB,SAAAhI,GAEhB+H,IADA/H,GAKJsE,GAAW,QAEhB,IAGC,qBAAKsB,UAAU,iBAAf,SACKvB,EACG,cAAC4D,EAAA,EAAD,CAAQC,QAAM,IACXJ,EACC,cAAC,EAAD,IACE,cAAC,EAAD,O,OCjBPK,OAPf,WAEE,OACE,cAAC,GAAD,KCKWC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjI,MAAK,YAAkD,IAA/CkI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS3B,OACP,cAAC,IAAM4B,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.7bb4ccd8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDG3OOX85L4j93eBU_5YGfwKrHyqyR4zqo\",\n    authDomain: \"day-data-6a2e6.firebaseapp.com\",\n    databaseURL: \"https://day-data-6a2e6-default-rtdb.firebaseio.com\",\n    projectId: \"day-data-6a2e6\",\n    storageBucket: \"day-data-6a2e6.appspot.com\",\n    messagingSenderId: \"565567779519\",\n    appId: \"1:565567779519:web:bb0be02aba68467cbb0c0a\",\n    measurementId: \"G-W27M63J3LF\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const dataRef = firestore.collection('daily-data');\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const userDoc = (uid) => { return firestore.doc('users/' + uid) };","import _ from \"lodash\";\n\nexport const dataFields = {\n    date: {\n        type: 'date',\n        name: 'Date: ',\n        tableHeader: 'Date',\n        editInTable: false,\n    },\n    rating: {\n        type: 'number',\n        name: 'How happy were you today?',\n        min: 0,\n        max: 10,\n        tableHeader: 'Happiness',\n        editInTable: true,\n        ratingField: true,\n    },\n    excitement: {\n        type: 'number',\n        name: 'How exciting was today?',\n        min: 0,\n        max: 10,\n        tableHeader: 'Excitement',\n        editInTable: true,\n        ratingField: true,\n    },\n    stress: {\n        type: 'number',\n        name: 'How stressed were you today?',\n        min: 0,\n        max: 10,\n        tableHeader: 'Stress',\n        editInTable: true,\n        ratingField: true,\n    },\n    activities: {\n        type: 'array',\n        name: 'Activities:',\n        new: 'newActivity',\n        add: 'Activity',\n        tableHeader: 'Activities',\n        editInTable: true,\n    },\n    hadBreakfast: {\n        type: 'checkbox',\n        name: 'Had Breakfast?',\n        tableHeader: 'Breakfast',\n        editInTable: true,\n    },\n    dressup: {\n        type: 'checkbox',\n        name: 'Did I Dress Up or Feel Cute?',\n        tableHeader: 'Dressed Up',\n        editInTable: true,\n    },\n    exercise: {\n        type: 'array',\n        name: 'Exercise:',\n        new: 'newExercise',\n        add: 'Exercise',\n        tableHeader: 'Exercise',\n        editInTable: true,\n    },\n    food: {\n        type: 'array',\n        name: 'Food:',\n        new: 'newFood',\n        add: 'Food',\n        tableHeader: 'Food',\n        editInTable: true,\n    },\n    journaled: {\n        type: 'checkbox',\n        name: 'Did I Journal?',\n        tableHeader: 'Journaled',\n        editInTable: true,\n    },\n    peopleSaw: {\n        type: 'array',\n        name: 'People I Saw:',\n        new: 'newPerson',\n        add: 'Person',\n        tableHeader: 'People I Saw',\n        editInTable: true,\n    },\n    readingTime: {\n        type: 'number',\n        name: 'Reading Time (in minutes):',\n        min: 0,\n        max: 3600,\n        tableHeader: 'Reading Time',\n        editInTable: true,\n    },\n    showered: {\n        type: 'checkbox',\n        name: 'Did I Shower?',\n        tableHeader: 'Showered',\n        editInTable: true,\n    },\n    skincare: {\n        type: 'checkbox',\n        name: 'Did I Do My Skincare Routine?',\n        tableHeader: 'Skincare',\n        editInTable: true,\n    },\n    weather: {\n        type: 'text',\n        name: 'Weather:',\n        tableHeader: 'Weather',\n        editInTable: true,\n    },\n}\n\nexport const defaultDataState = {\n    activities: [],\n    date: new Date(),\n    dressup: false,\n    exercise: [],\n    food: [],\n    hadBreakfast: false,\n    journaled: false,\n    newActivity: '',\n    newExercise: '',\n    newFood: '',\n    newPerson: '',\n    peopleSaw: [],\n    showered: false,\n    skincare: false,\n    rating: 5,\n    excitement: 5,\n    stress: 5,\n    readingTime: 0,\n    weather: '',\n}\n\n\nexport const colors = {\n    'activities': 'pink',\n    'food': 'yellow',\n    'exercise': 'teal',\n    'peopleSaw': 'violet',\n}\n\nexport const getColor = (id) => {\n    return colors[id]\n}\n\nexport const parseIntVals = Object.keys(_.pickBy(dataFields, (field) => field.type === 'number'));\nexport const parseBooleanVals = Object.keys(_.pickBy(dataFields, (field) => field.type === 'checkbox'));","import { colors, parseIntVals, parseBooleanVals } from './data'\n\nexport const sameDay = (date1, date2) => {\n    return date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear()\n}\n\nexport const getColor = (id) => {\n    return colors[id]\n}\n\nexport const parsedValue = (id, val, oldVal) => {\n    if (parseIntVals.includes(id)) {\n        return parseInt(val)\n    } else if (parseBooleanVals.includes(id)) {\n        return !oldVal\n    } else if (id === 'date') {\n        return new Date(val + \" \");\n    } else {\n        return val;\n    }\n}","import React from \"react\";\nimport \"./ListTags.scss\";\nimport { Label, Icon } from 'semantic-ui-react'\nimport { getColor } from '../../static/util';\n\nexport const ListTags = (props) => {\n    const { data, onDelete, fieldKey } = props;\n\n    return (\n        <div style={{ flexDirection: 'row' }}>\n            {data.map((item, index) =>\n                <Label key={index} color={getColor(fieldKey)} style={{ paddingTop: '.78571429em', paddingBottom: '.78571429em', marginTop: '5px' }}>\n                    {item}\n                    <Icon name='delete' onClick={() => onDelete(item)} />\n                </Label>)}\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Input, Button, Checkbox } from 'semantic-ui-react'\nimport { ListTags } from '../ListTags/ListTags'\n\nexport const FieldInput = (props) => {\n    const { dataValue, onDeleteFromArray, dataFromKey, fieldKey, handleChange, newArrayValue, addToDataArray, onArrayInputChanged } = props;\n\n    if (dataValue.type === 'array') {\n        return (\n            <div>\n                <Input\n                    type=\"text\"\n                    id={dataValue.new}\n                    value={newArrayValue || \"\"}\n                    onChange={onArrayInputChanged || handleChange}\n                    label={<Button id={fieldKey} onClick={(e) => addToDataArray(e, dataValue.new)}>Add {dataValue.add}</Button>}\n                    labelPosition='right' />\n                <ListTags data={dataFromKey} onDelete={onDeleteFromArray} fieldKey={fieldKey} />\n            </div>\n        );\n    } else if (dataValue.type === 'number') {\n        return <Input type={dataValue.type} min={dataValue.min} max={dataValue.max} id={fieldKey} value={dataFromKey} onChange={handleChange} />\n    } else if (dataValue.type === 'checkbox') {\n        return <Checkbox type={dataValue.type} id={fieldKey} checked={dataFromKey} onChange={handleChange} />\n    } else if (dataValue.type === 'date') {\n        return <Input type={dataValue.type} id={fieldKey} value={dataFromKey.toISOString().split('T')[0]} onChange={handleChange} />\n    } else {\n        return <Input placeholder={dataValue.name} type={dataValue.type} id={fieldKey} value={dataFromKey} onChange={handleChange} />\n    }\n}\n","import { LogFormPage } from './LogFormPage'\nexport default LogFormPage\n","import React, { useState } from \"react\";\nimport { dataRef, auth } from '../../firebase'\nimport { parsedValue } from '../../static/util';\nimport _ from \"lodash\";\nimport { Button, Form, Modal } from 'semantic-ui-react'\nimport { defaultDataState, dataFields } from '../../static/data'\nimport \"./logformpage.scss\";\nimport { FieldInput } from \"../../components/FieldInput/FieldInput\";\n\nexport const LogFormPage = (props) => {\n    const [data, setData] = useState(defaultDataState);\n    const [showModal, setShowModal] = useState(false);\n\n    // add the logged data to firebase\n    const addData = () => {\n        var finalData = _.omit(data, ['newActivity', 'newExercise', 'newPerson', 'newFood', ''])\n        finalData = { ...finalData, user: auth.currentUser.uid }\n        console.log(finalData)\n        dataRef\n            .add(finalData)\n            .then((_doc) => {\n                setData(defaultDataState);\n                setShowModal(true);\n            })\n            .catch((error) => {\n                console.log(\"bad\" + error)\n            });\n    }\n\n    // update input log\n    const handleChange = (event) => {\n        const { id, value } = event.target;\n        setData({\n            ...data,\n            [id]: parsedValue(id, value, data[id]),\n        });\n    };\n\n    const addToDataArray = (event, input) => {\n        const { id } = event.target;\n\n        if (event.detail !== 0 && data[input] !== \"\") {\n            setData({\n                ...data,\n                [id]: _.concat(data[id], [data[input]]),\n                [input]: '',\n            });\n        }\n    }\n\n    const deleteFromArray = (value, key) => {\n        setData({\n            ...data,\n            [key]: _.without(data[key], value)\n        })\n    }\n\n    return (\n        <Form>\n            {Object.entries(dataFields).map(([key, value]) => {\n                return <Form.Field inline key={key}>\n                    <label>{value.name}</label>\n                    <FieldInput\n                        dataValue={value}\n                        fieldKey={key}\n                        dataFromKey={data[key]}\n                        handleChange={handleChange}\n                        onDeleteFromArray={(item) => deleteFromArray(item, key)}\n                        newArrayValue={data[value.new]}\n                        addToDataArray={addToDataArray} />\n                </Form.Field>\n\n            })}\n            <Button primary onClick={addData}>Add Day</Button>\n            <Modal\n                size='mini'\n                open={showModal}\n                onClose={() => setShowModal(false)}\n            >\n                <Modal.Content>Day Successfully Logged!</Modal.Content>\n                <Modal.Actions>\n                    <Button positive onClick={() => props.changeTab(2)}>Ok</Button>\n                </Modal.Actions>\n            </Modal>\n        </Form>\n    )\n}\n","import { dataFields } from '../../static/data'\nimport _ from \"lodash\";\n\nexport const allFields = Object.keys(dataFields);\nexport const allOperators = ['==', '<', '<=', '>', '>=', '!=', 'array-contains'];\nexport const arrayFields = _.filter(Object.entries(dataFields), ([key, value]) => value.type === 'array').map(([key]) => key);\nexport const allRatingFields = _.filter(Object.entries(dataFields), ([key, value]) => value.ratingField).map(([key, value]) => {\n    return {\n        'key': key,\n        'text': value.tableHeader,\n        'value': key,\n        'id': 'field',\n    }\n})\n\nexport const fieldSelectionOptions = Object.entries(dataFields).map(([key, value]) => {\n    return {\n        'key': key,\n        'text': value.tableHeader,\n        'value': key,\n        'id': 'field',\n    }\n});\n\nexport const operatorSelectionOptions = allOperators.map((operator) => {\n    return {\n        'key': operator,\n        'text': operator,\n        'value': operator,\n        'id': 'operator',\n    }\n})\n","import React, { useState } from \"react\";\nimport \"./../datapage.scss\";\nimport { dataRef, auth } from '../../../firebase'\nimport { allFields, arrayFields, fieldSelectionOptions, allRatingFields } from './../util'\nimport { Dropdown, Button, Grid } from 'semantic-ui-react'\nimport _ from \"lodash\";\n\nexport const CompareData = () => {\n    const [field, setField] = useState(allFields[0]);\n    const [ratingField, setRatingField] = useState(allRatingFields[0].value);\n    const [ratingArr, setRatingArr] = useState([]);\n    console.log(allRatingFields)\n    console.log(ratingField)\n\n    const getResults = (event) => {\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .onSnapshot(\n                querySnapshot => {\n                    var ratings = {};\n                    querySnapshot.forEach((doc) => {\n                        const values = doc.data()[field];\n                        const rating = doc.data()[ratingField];\n                        if (!arrayFields.includes(field)) {\n                            if (Object.keys(ratings).includes(values)) {\n                                ratings[values].sum += rating;\n                                ratings[values].count++;\n                            } else {\n                                ratings[values] = {\n                                    sum: rating,\n                                    count: 1\n                                }\n                            }\n                        } else {\n                            values.forEach(value => {\n                                if (Object.keys(ratings).includes(value)) {\n                                    ratings[value].sum += rating;\n                                    ratings[value].count++;\n                                } else {\n                                    ratings[value] = {\n                                        sum: rating,\n                                        count: 1\n                                    }\n                                }\n                            })\n                        }\n\n                    });\n                    var ratingArray = [];\n                    Object.entries(ratings).forEach((rating) => {\n                        const [key, value] = rating\n                        rating = {\n                            value: key,\n                            average: value.sum / value.count\n                        }\n                        ratingArray.push(rating)\n                    })\n                    ratingArray = _.reverse(_.sortBy(ratingArray, 'average'))\n                    setRatingArr(ratingArray)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>Which _ will make the best day?</h1>\n            <Grid stackable columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Field'\n                            fluid\n                            selection\n                            options={fieldSelectionOptions}\n                            id=\"field\"\n                            onChange={(event, { value }) => setField(value)} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Rating Field'\n                            fluid\n                            selection\n                            options={allRatingFields}\n                            id=\"ratingField\"\n                            onChange={(event, { value }) => setRatingField(value)} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            {ratingArr.map((rating) => (<h3>{rating.value}: {rating.average}</h3>)\n            )}\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { dataRef, auth } from '../../../firebase'\nimport { allFields, allOperators, fieldSelectionOptions, operatorSelectionOptions } from './../util'\nimport \"./../datapage.scss\";\nimport { Dropdown, Input, Button, Grid } from 'semantic-ui-react'\n\nexport const AverageData = () => {\n\n    const [queryData, setQueryData] = useState({\n        field: allFields[0],\n        operator: allOperators[0],\n        value: ''\n    })\n    const [average, setAverage] = useState({\n        happiness: 0,\n        excitement: 0,\n        stress: 0,\n    });\n\n    // update input changes\n    const handleChange = (event, value, id) => {\n        setQueryData({\n            ...queryData,\n            [id]: value,\n        });\n    };\n\n    const getResults = (event) => {\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .where(queryData.field, queryData.operator, queryData.value)\n            .onSnapshot(\n                querySnapshot => {\n                    var happiness = 0;\n                    var excitement = 0;\n                    var stress = 0;\n                    querySnapshot.forEach((doc) => {\n                        happiness += doc.data().rating;\n                        excitement += doc.data().excitement;\n                        stress += doc.data().stress;\n                    });\n                    setAverage({\n                        happiness: happiness / querySnapshot.size,\n                        excitement: excitement / querySnapshot.size,\n                        stress: stress / querySnapshot.size,\n                    })\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>How good will my day be if...</h1>\n            <Grid stackable columns={4}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Field'\n                            fluid\n                            selection\n                            options={fieldSelectionOptions}\n                            id=\"field\"\n                            onChange={(event, { value }) => handleChange(event, value, 'field')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Operator'\n                            fluid\n                            selection\n                            options={operatorSelectionOptions}\n                            id=\"operator\"\n                            onChange={(event, { value }) => handleChange(event, value, 'operator')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Input placeholder=\"Value\" fluid type=\"text\" id=\"value\" value={queryData.value} onChange={(event, { value }) => handleChange(event, value, 'value')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            {average.happiness !== 0 && <h3>Happiness: {average.happiness}</h3>}\n            {average.excitement !== 0 && <h3>Excitement: {average.excitement}</h3>}\n            {average.stress !== 0 && <h3>Stress: {average.stress}</h3>}\n        </div>\n    )\n}\n","import { DataPage } from './DataPage'\nexport default DataPage\n","import React from \"react\";\nimport \"./datapage.scss\";\nimport { CompareData } from './components/CompareData.js'\nimport { AverageData } from './components/AverageData.js'\nimport { Divider } from 'semantic-ui-react'\n\nexport const DataPage = () => {\n    return (\n        <div>\n            <AverageData />\n            <Divider />\n            <CompareData />\n        </div>\n    )\n}\n","import { TablePage } from './TablePage'\nexport default TablePage\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, auth } from '../../firebase'\nimport _ from \"lodash\";\nimport { Button, Checkbox, Icon, Confirm } from 'semantic-ui-react'\nimport \"./tablepage.scss\";\nimport { dataFields } from '../../static/data'\nimport { parsedValue } from '../../static/util';\nimport { ListTags } from '../../components/ListTags/ListTags'\nimport { FieldInput } from \"../../components/FieldInput/FieldInput\";\n\nexport const TablePage = () => {\n    const [tableValues, setTableValues] = useState([]);\n    const [editField, setEditField] = useState({\n        rowIndex: 0,\n        fieldName: \"rating\",\n        fieldValue: 5,\n        inUse: false,\n    })\n    const [loading, setLoading] = useState(true);\n    const [newListItem, setNewListItem] = useState();\n    const [showModal, setShowModal] = useState(false);\n    const [rowToDelete, setRowToDelete] = useState();\n\n    useEffect(() => {\n        console.log(\"use effect to get table data\")\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .orderBy('date', 'desc')\n            .onSnapshot(\n                querySnapshot => {\n                    var queryTableValues = {};\n                    querySnapshot.forEach((doc) => {\n                        const row = doc.data();\n                        var newRowValues = {};\n                        Object.entries(dataFields).map(([key, value]) => {\n                            const fieldValue = row[key];\n                            newRowValues[key] = {\n                                header: value.tableHeader,\n                                cellValue: fieldValue instanceof Object && fieldValue.seconds ? new Date(fieldValue.seconds * 1000) : fieldValue,\n                                show: true,\n                                type: value.type,\n                            }\n                        })\n                        queryTableValues[doc.id] = newRowValues;\n                    });\n                    setTableValues(queryTableValues)\n                    console.log(queryTableValues)\n                    setLoading(false)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }, [loading]);\n\n    const displayValue = (value, key) => {\n        if (Array.isArray(value)) {\n            return (\n                <ListTags data={value} fieldKey={key} />\n            )\n        } else if (value instanceof Date) {\n            return value.toDateString();\n        } else if (typeof value == \"boolean\") {\n            return <Checkbox checked={value} disabled />\n        }\n        return value\n    }\n\n    const toggleEditCell = (rowIndex, fieldName, fieldValue) => {\n        setEditField({\n            rowIndex,\n            fieldName,\n            fieldValue,\n            inUse: !editField.inUse\n        })\n    }\n\n    const onInputChanged = (event, field) => {\n        setEditField({ ...editField, fieldValue: parsedValue(field, event.target.value, editField.fieldValue) })\n    }\n\n    const submitChange = (id, fieldName, oldValue, newFieldValue) => {\n        dataRef.doc(id).update({ [fieldName]: parsedValue(fieldName, newFieldValue, oldValue) }).then(() => {\n            toggleEditCell();\n            setLoading(true);\n        });\n    }\n\n    const removeValueFromArray = (itemVal) => {\n        setEditField({ ...editField, fieldValue: _.without(editField.fieldValue, itemVal) })\n    }\n\n    const addValuetoArray = (e, newProp) => {\n        setEditField({ ...editField, fieldValue: _.concat(editField.fieldValue, (newListItem)) })\n        setNewListItem(\"\")\n    }\n\n    const deleteRow = (rowId) => {\n        dataRef.doc(rowId).delete().then(() => {\n            console.log(\"Document successfully deleted!\");\n            setShowModal(false)\n        }).catch((error) => {\n            console.error(\"Error removing document: \", error);\n        });\n    }\n\n    return (\n        <div>\n            <h1>Table Data</h1>\n            {!loading && tableValues && (\n                <table className=\"ui celled table\">\n                    <thead>\n                        <tr>\n                            {Object.values(Object.values(tableValues)[0]).map((field, index) => {\n                                return (<th key={index} className=\"col-name\">{field.header}</th>)\n                            })}\n                            <th>Delete Row</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.entries(tableValues).map(([rowId, row]) => {\n                            return (\n                                <tr key={rowId}>\n                                    {Object.entries(row).map(([key, value]) => {\n                                        return (\n                                            <td data-label={key} key={key + rowId} >\n                                                {editField.inUse && editField.fieldName === key && editField.rowIndex === rowId ?\n                                                    <div className=\"ui action input\">\n                                                        <FieldInput\n                                                            dataValue={dataFields[key]}\n                                                            fieldKey={key}\n                                                            dataFromKey={editField.fieldValue}\n                                                            handleChange={(event) => onInputChanged(event)}\n                                                            onArrayInputChanged={(e) => setNewListItem(e.target.value)}\n                                                            onDeleteFromArray={(itemValue) => removeValueFromArray(itemValue)}\n                                                            newArrayValue={newListItem}\n                                                            addToDataArray={addValuetoArray} />\n                                                        <Button onClick={() => submitChange(rowId, key, value.cellValue, editField.fieldValue)}>Done</Button>\n                                                    </div>\n                                                    : <div className=\"custom-cell\">\n                                                        <div className=\"cell-value\">\n                                                            {displayValue(value.cellValue, key)}\n                                                        </div>\n                                                        {value.show && <Button className=\"edit-btn\" size=\"mini\" onClick={() => toggleEditCell(rowId, key, value.cellValue)}><i className=\"edit icon edit-icon\"></i></Button>}\n                                                    </div>\n                                                }\n                                            </td>)\n                                    })}\n                                    <td><Button><Icon name='delete' onClick={() => { setRowToDelete(rowId); setShowModal(true) }} /></Button></td>\n                                </tr>)\n                        })}\n                    </tbody>\n                </table>\n            )}\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n            <Confirm\n                open={showModal}\n                content='Are you sure you want to delete this row?'\n                confirmButton=\"Delete\"\n                onCancel={() => setShowModal(false)}\n                onConfirm={() => deleteRow(rowToDelete)}\n                size='mini'\n            />\n        </div>\n    )\n}\n","import { TabContent } from './TabContent'\nexport default TabContent\n","import React, { useState } from \"react\";\nimport { Tab } from 'semantic-ui-react'\nimport \"./tabcontent.scss\";\nimport LogFormPage from '../LogFormPage'\nimport DataPage from '../DataPage'\nimport TablePage from '../TablePage'\n\nexport const TabContent = () => {\n    const [activeTab, setActiveTab] = useState(0);\n    const panes = [\n        { menuItem: 'Logging Form', render: () => <Tab.Pane><LogFormPage user changeTab={setActiveTab} /></Tab.Pane> },\n        { menuItem: 'Data Analysis', render: () => <Tab.Pane><DataPage user /></Tab.Pane> },\n        {\n            menuItem: 'Table Data', render: () =>\n                <Tab.Pane><TablePage user /></Tab.Pane>\n        },\n    ]\n\n    return (\n        <Tab panes={panes} activeIndex={activeTab} className=\"tabs-container\" onTabChange={(e, { activeIndex }) => setActiveTab(activeIndex)} />\n    )\n}\n","import { LoginPage } from './LoginPage'\nexport default LoginPage\n","import React from \"react\";\nimport { provider, auth } from '../../firebase'\nimport { Container, Button, Header } from 'semantic-ui-react'\nimport \"./loginpage.scss\";\n\nexport const LoginPage = () => {\n\n    const googleSignIn = () => {\n        auth.signInWithPopup(provider).then((response) => {\n            console.log(response)\n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    return (\n        <Container textAlign=\"center\">\n            <Header as='h1' className=\"title\">Welcome to Day Data</Header>\n            <Header as='h3'>An easy way to track your days and analyze which patterns lead to the best days</Header>\n            <Button color='google plus' onClick={googleSignIn}>Sign in with Google</Button>\n        </Container>\n    )\n}\n","import { MainPage } from './MainPage'\nexport default MainPage\n","import React, { useState, useEffect } from \"react\";\nimport { auth } from '../../firebase'\nimport { Loader } from 'semantic-ui-react'\nimport \"./mainpage.scss\";\nimport TabContent from '../TabContent'\nimport LoginPage from '../LoginPage'\n\nexport const MainPage = () => {\n    const [loggedIn, toggleLogin] = useState(auth.currentUser != null)\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                toggleLogin(true)\n            } else {\n                toggleLogin(false)\n            }\n            setLoading(false)\n        });\n    }, []);\n\n    return (\n        <div className=\"main-container\">\n            {loading ?\n                <Loader active />\n                : (loggedIn ?\n                    <TabContent />\n                    : <LoginPage />)\n            }\n        </div>\n    )\n}\n","import React from \"react\";\nimport MainPage from \"./pages/MainPage\";\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction App() {\n\n  return (\n    <MainPage />\n\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}