{"version":3,"sources":["firebase.js","pages/LogFormPage/util.js","static/data.js","pages/LogFormPage/index.js","pages/LogFormPage/LogFormPage.js","pages/DataPage/util.js","pages/DataPage/components/CompareData.js","pages/DataPage/components/AverageData.js","pages/DataPage/DataPage.js","pages/DataPage/index.js","pages/TabContent/index.js","pages/TabContent/TabContent.js","pages/LoginPage/index.js","pages/LoginPage/LoginPage.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","dataRef","collection","provider","GoogleAuthProvider","colors","parseIntVals","parseBooleanVals","dataFields","food","type","name","new","add","activities","exercise","hadBreakfast","journaled","showered","dressup","skincare","peopleSaw","readingTime","min","max","weather","rating","defaultDataState","date","Date","newActivity","newExercise","newFood","newPerson","LogFormPage","useState","data","setData","handleChange","event","target","id","value","val","oldVal","includes","parseInt","parsedValue","addToDataArray","input","detail","_","concat","Form","Field","inline","Input","toISOString","split","onChange","Object","entries","map","key","style","marginBottom","Group","flexDirection","onClick","e","label","Button","labelPosition","item","index","Label","color","paddingTop","paddingBottom","marginTop","Icon","without","deleteFromArray","Checkbox","checked","placeholder","primary","removeNews","omit","addUser","user","currentUser","uid","console","log","then","_doc","catch","error","allFields","keys","allOperators","arrayFields","filter","fieldSelectionOptions","substring","length","operatorSelectionOptions","operator","CompareData","field","setField","ratingArr","setRatingArr","Grid","stackable","columns","Row","Column","Dropdown","fluid","selection","options","where","onSnapshot","querySnapshot","ratings","forEach","doc","values","sum","count","ratingArray","average","push","AverageData","queryData","setQueryData","setAverage","size","dataTypes","DataPage","Divider","TabContent","panes","menuItem","render","Tab","Pane","signOut","className","LoginPage","Container","textAlign","Header","as","signInWithPopup","response","MainPage","loggedIn","toggleLogin","loading","setLoading","useEffect","onAuthStateChanged","Loader","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e72e8f0c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDG3OOX85L4j93eBU_5YGfwKrHyqyR4zqo\",\n    authDomain: \"day-data-6a2e6.firebaseapp.com\",\n    databaseURL: \"https://day-data-6a2e6-default-rtdb.firebaseio.com\",\n    projectId: \"day-data-6a2e6\",\n    storageBucket: \"day-data-6a2e6.appspot.com\",\n    messagingSenderId: \"565567779519\",\n    appId: \"1:565567779519:web:bb0be02aba68467cbb0c0a\",\n    measurementId: \"G-W27M63J3LF\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const dataRef = firestore.collection('daily-data');\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const userDoc = (uid) => { return firestore.doc('users/' + uid) };","export const sameDay = (date1, date2) => {\n    return date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear()\n}\n\nconst colors = {\n    'activities': 'pink',\n    'food': 'yellow',\n    'exercise': 'teal',\n    'peopleSaw': 'violet',\n}\n\nexport const getColor = (id) => {\n    return colors[id]\n}\n\nconst parseIntVals = ['rating'];\nconst parseBooleanVals = ['hadBreakfast', 'journaled'];\n\nexport const parsedValue = (id, val, oldVal) => {\n    if (parseIntVals.includes(id)) {\n        return parseInt(val)\n    } else if (parseBooleanVals.includes(id)) {\n        return !oldVal\n    } else if (id === 'date') {\n        return new Date(val);\n    } else {\n        return val;\n    }\n}","\nexport const dataFields = {\n    food: {\n        type: 'array',\n        name: 'Food:',\n        new: 'newFood',\n        add: 'Food',\n    },\n    activities: {\n        type: 'array',\n        name: 'Activities:',\n        new: 'newActivity',\n        add: 'Activity',\n    },\n    exercise: {\n        type: 'array',\n        name: 'Exercise:',\n        new: 'newExercise',\n        add: 'Exercise',\n    },\n    hadBreakfast: {\n        type: 'checkbox',\n        name: 'Had Breakfast?',\n    },\n    journaled: {\n        type: 'checkbox',\n        name: 'Did I Journal?',\n    },\n    showered: {\n        type: 'checkbox',\n        name: 'Did I Shower?',\n    },\n    dressup: {\n        type: 'checkbox',\n        name: 'Did I Dress Up or Feel Cute?',\n    },\n    skincare: {\n        type: 'checkbox',\n        name: 'Did I Do My Skincare Routine?',\n    },\n    peopleSaw: {\n        type: 'array',\n        name: 'People I Saw:',\n        new: 'newPerson',\n        add: 'Person',\n    },\n    readingTime: {\n        type: 'number',\n        name: 'Reading Time (in minutes):',\n        min: 0,\n        max: 3600,\n    },\n    weather: {\n        type: 'text',\n        name: 'Weather:',\n    },\n    rating: {\n        type: 'number',\n        name: 'How would you rate today?',\n        min: 0,\n        max: 10\n    },\n}\n\nexport const defaultDataState = {\n    activities: [],\n    date: new Date(),\n    dressup: false,\n    exercise: [],\n    food: [],\n    hadBreakfast: false,\n    journaled: false,\n    newActivity: '',\n    newExercise: '',\n    newFood: '',\n    newPerson: '',\n    peopleSaw: [],\n    showered: false,\n    skincare: false,\n    rating: 5,\n    readingTime: 0,\n    weather: '',\n}","import { LogFormPage } from './LogFormPage'\nexport default LogFormPage\n","import React, { useState } from \"react\";\nimport { dataRef, userDoc, auth } from '../../firebase'\nimport { parsedValue, getColor } from './util';\nimport _ from \"lodash\";\nimport { Input, Button, Checkbox, Form, Label, Icon } from 'semantic-ui-react'\nimport { defaultDataState, dataFields } from '../../static/data'\nimport \"./logformpage.scss\";\n\nexport const LogFormPage = () => {\n    const [data, setData] = useState(defaultDataState);\n\n    // add the logged data to firebase\n    const addData = () => {\n        // console.log(_.omit(data, ['newActivity', 'newExercise', 'newPerson', 'newFood', '']))\n        const removeNews = _.omit(data, ['newActivity', 'newExercise', 'newPerson', 'newFood', ''])\n        const addUser = { ...removeNews, user: auth.currentUser.uid }\n        console.log(addUser)\n        dataRef\n            .add(addUser)\n            .then((_doc) => {\n                setData(defaultDataState);\n            })\n            .catch((error) => {\n                console.log(\"bad\" + error)\n            });\n    }\n\n    // update input log\n    const handleChange = (event) => {\n        const { id, value } = event.target;\n        setData({\n            ...data,\n            [id]: parsedValue(id, value, data[id]),\n        });\n    };\n\n    const addToDataArray = (event, input) => {\n        const { id } = event.target;\n\n        if (event.detail !== 0 && data[input] !== \"\") {\n            setData({\n                ...data,\n                [id]: _.concat(data[id], [data[input]]),\n                [input]: '',\n            });\n        }\n    }\n\n    const deleteFromArray = (value, key) => {\n        setData({\n            ...data,\n            [key]: _.without(data[key], value)\n        })\n    }\n\n    return (\n        <Form>\n            <Form.Field inline>\n                <label>Date</label>\n                <Input type=\"date\" id=\"date\" value={data.date.toISOString().split('T')[0]} onChange={handleChange} />\n            </Form.Field>\n            {Object.entries(dataFields).map(([key, value]) => {\n                if (value.type === 'array') {\n                    return (\n                        <div style={{ marginBottom: '20px' }} key={key}>\n                            <Form.Group style={{ flexDirection: 'column' }}>\n                                <Form.Field inline>\n                                    <label>{value.name}</label>\n                                    <Input type=\"text\" id={value.new} value={data[value.new] || \"\"} onChange={handleChange} onClick={(e) => addToDataArray(e, value.new)} label={<Button id={key} onClick={(e) => addToDataArray(e, value.new)}>Add {value.add}</Button>} labelPosition='right' />\n                                </Form.Field>\n                                <div style={{ flexDirection: 'row' }}>\n                                    {data[key].map((item, index) =>\n                                        <Label key={index} color={getColor(key)} style={{ paddingTop: '.78571429em', paddingBottom: '.78571429em', marginTop: '5px' }}>\n                                            {item}\n                                            <Icon name='delete' onClick={() => deleteFromArray(item, key)} />\n                                        </Label>)}\n                                </div>\n                            </Form.Group>\n                        </div>\n                    );\n                } else if (value.type === 'number') {\n                    return (<Form.Field inline key={key}>\n                        <label>{value.name}</label>\n                        <Input type={value.type} min={value.min} max={value.max} id={key} value={data[key]} onChange={handleChange} />\n                    </Form.Field>)\n                } else if (value.type === 'checkbox') {\n                    return (<Form.Field inline key={key}>\n                        <label>{value.name}</label>\n                        <Checkbox type={value.type} id={key} checked={data[key]} onChange={handleChange} />\n                    </Form.Field>)\n                } else {\n                    return (<Form.Field inline key={key}>\n                        <label>{value.name}</label>\n                        <Input placeholder={value.name} type={value.type} id={key} value={data[key]} onChange={handleChange} />\n                    </Form.Field>)\n                }\n            })}\n            <Button primary onClick={addData}>Add Day</Button>\n        </Form>\n    )\n}\n","import { dataFields } from '../../static/data'\nimport _ from \"lodash\";\n\nexport const allFields = Object.keys(dataFields);\nexport const allOperators = ['==', '<', '<=', '>', '>=', '!=', 'array-contains'];\nexport const arrayFields = _.filter(Object.entries(dataFields), ([value]) => value.type === 'array').map(([key]) => key);\n\nexport const fieldSelectionOptions = Object.entries(dataFields).map(([key, value]) => {\n    return {\n        'key': key,\n        'text': value.name.substring(0, value.name.length - 1),\n        'value': key,\n        'id': 'field',\n    }\n});\n\nexport const operatorSelectionOptions = allOperators.map((operator) => {\n    return {\n        'key': operator,\n        'text': operator,\n        'value': operator,\n        'id': 'operator',\n    }\n})\n","import React, { useState } from \"react\";\nimport \"./../datapage.scss\";\nimport { dataRef, auth } from '../../../firebase'\nimport { allFields, arrayFields, fieldSelectionOptions } from './../util'\nimport { Dropdown, Button, Grid } from 'semantic-ui-react'\n\nexport const CompareData = () => {\n    const [field, setField] = useState(allFields[0]);\n    const [ratingArr, setRatingArr] = useState([]);\n\n    const getResults = (event) => {\n        console.log(event)\n        console.log(field)\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .onSnapshot(\n                querySnapshot => {\n                    var ratings = {};\n                    querySnapshot.forEach((doc) => {\n                        if (!arrayFields.includes(field)) {\n                            const value = doc.data()[field];\n                            const rating = doc.data().rating;\n                            if (Object.keys(ratings).includes(value)) {\n                                ratings[value].sum += rating;\n                                ratings[value].count++;\n                            } else {\n                                ratings[value] = {\n                                    sum: rating,\n                                    count: 1\n                                }\n                            }\n                        } else {\n                            const values = doc.data()[field];\n                            const rating = doc.data().rating;\n                            console.log(values)\n                            values.forEach(value => {\n                                if (Object.keys(ratings).includes(value)) {\n                                    ratings[value].sum += rating;\n                                    ratings[value].count++;\n                                } else {\n                                    ratings[value] = {\n                                        sum: rating,\n                                        count: 1\n                                    }\n                                }\n                            })\n                        }\n\n                    });\n                    var ratingArray = [];\n                    Object.entries(ratings).forEach((rating) => {\n                        const [key, value] = rating\n                        rating = {\n                            value: key,\n                            average: value.sum / value.count\n                        }\n                        ratingArray.push(rating)\n                    })\n                    setRatingArr(ratingArray)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>Which _ will make the best day?</h1>\n            <Grid stackable columns={2}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Field'\n                            fluid\n                            selection\n                            options={fieldSelectionOptions}\n                            id=\"field\"\n                            onChange={(event, { value }) => setField(value)} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            {ratingArr.map((rating) => (<h3>{rating.value}: {rating.average}</h3>)\n            )}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, auth, userDoc } from '../../../firebase'\nimport { allFields, allOperators, fieldSelectionOptions, operatorSelectionOptions } from './../util'\nimport \"./../datapage.scss\";\nimport { Dropdown, Input, Button, Grid } from 'semantic-ui-react'\n\nexport const AverageData = () => {\n\n    const [queryData, setQueryData] = useState({\n        field: allFields[0],\n        operator: allOperators[0],\n        value: ''\n    })\n    const [average, setAverage] = useState(0);\n\n    // update input changes\n    const handleChange = (event, value, id) => {\n        console.log(event)\n        console.log(value)\n        console.log(id)\n        setQueryData({\n            ...queryData,\n            [id]: value,\n        });\n    };\n\n    const getResults = (event) => {\n        console.log(event)\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .where(queryData.field, queryData.operator, queryData.value)\n            .onSnapshot(\n                querySnapshot => {\n                    var sum = 0;\n                    console.log(querySnapshot)\n                    querySnapshot.forEach((doc) => {\n                        const rating = doc.data().rating;\n                        sum += rating;\n                    });\n                    setAverage(sum / querySnapshot.size)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>How good will my day be if...</h1>\n            <Grid stackable columns={4}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Field'\n                            fluid\n                            selection\n                            options={fieldSelectionOptions}\n                            id=\"field\"\n                            onChange={(event, { value }) => handleChange(event, value, 'field')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Operator'\n                            fluid\n                            selection\n                            options={operatorSelectionOptions}\n                            id=\"operator\"\n                            onChange={(event, { value }) => handleChange(event, value, 'operator')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Input placeholder=\"Value\" fluid type=\"text\" id=\"value\" value={queryData.value} onChange={(event, { value }) => handleChange(event, value, 'value')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            {average != 0 && <h3>Rating: {average}</h3>}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, firestore } from '../../firebase'\nimport _ from \"lodash\";\nimport \"./datapage.scss\";\nimport { CompareData } from './components/CompareData.js'\nimport { AverageData } from './components/AverageData.js'\nimport { Divider } from 'semantic-ui-react'\n\nconst dataTypes = ['average', 'compare'];\n\nexport const DataPage = () => {\n    const [dataType, setDataType] = useState(dataTypes[0]);\n\n    return (\n        <div>\n            <AverageData />\n            <Divider />\n            <CompareData />\n        </div>\n    )\n}\n","import { DataPage } from './DataPage'\nexport default DataPage\n","import { TabContent } from './TabContent'\nexport default TabContent\n","import React, { useEffect, useContext } from \"react\";\nimport { dataRef, auth } from '../../firebase'\nimport _ from \"lodash\";\nimport { Tab, Button } from 'semantic-ui-react'\nimport \"./tabcontent.scss\";\nimport LogFormPage from '../LogFormPage'\nimport DataPage from '../DataPage'\n\nexport const TabContent = () => {\n    // check if there has been a log today\n    // useEffect(() => {\n    //     dataRef\n    //         .orderBy('date', 'desc')\n    //         .limit(1)\n    //         .onSnapshot(\n    //             querySnapshot => {\n    //                 querySnapshot.forEach((doc) => {\n    //                     const mostRecentDate = doc.data().date.toDate();\n    //                     // if (sameDay(mostRecentDate, new Date())) {\n    //                     //     setLoggedToday(true);\n    //                     // } else {\n    //                     //     setLoggedToday(false);\n    //                     // }\n    //                 });\n    //             },\n    //             error => {\n    //                 console.log(error);\n    //             }\n    //         )\n    // })\n\n    const panes = [\n        { menuItem: 'Logging Form', render: () => <Tab.Pane><LogFormPage user /></Tab.Pane> },\n        { menuItem: 'Data Analysis', render: () => <Tab.Pane><DataPage user /></Tab.Pane> },\n        {\n            menuItem: 'Table Data', render: () =>\n                <Tab.Pane><Button onClick={() => auth.signOut()}>Logout</Button></Tab.Pane>\n        },\n    ]\n\n    return (\n        <Tab panes={panes} className=\"tabs-container\" />\n    )\n}\n","import { LoginPage } from './LoginPage'\nexport default LoginPage\n","import React, { useState, useContext } from \"react\";\nimport { provider, auth } from '../../firebase'\nimport { Container, Button, Header } from 'semantic-ui-react'\nimport _ from \"lodash\";\nimport \"./loginpage.scss\";\n\nexport const LoginPage = () => {\n\n    const googleSignIn = () => {\n        auth.signInWithPopup(provider).then((response) => {\n            console.log(response)\n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    return (\n        <Container textAlign=\"center\">\n            <Header as='h1' className=\"title\">Welcome to Day Data</Header>\n            <Header as='h3'>An easy way to track your days and analyze which patterns lead to the best days</Header>\n            <Button color='google plus' onClick={googleSignIn}>Sign in with Google</Button>\n        </Container>\n    )\n}\n","import { MainPage } from './MainPage'\nexport default MainPage\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, userDoc, auth } from '../../firebase'\nimport _ from \"lodash\";\nimport { Loader, FormField } from 'semantic-ui-react'\nimport \"./mainpage.scss\";\nimport TabContent from '../TabContent'\nimport LoginPage from '../LoginPage'\n\nexport const MainPage = () => {\n\n    // useEffect(() => {\n    //     dataRef\n    //         .get()\n    //         .then(\n    //             querySnapshot => {\n    //                 querySnapshot.forEach((doc) => {\n    //                     console.log(doc.id)\n    //                     console.log(auth.currentUser.uid)\n    //                     dataRef.doc(doc.id).update({ 'newActivity': FieldValue.delete });\n    //                 })\n    //             })\n    // }, [])\n\n    const [loggedIn, toggleLogin] = useState(auth.currentUser != null)\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                toggleLogin(true)\n            } else {\n                toggleLogin(false)\n            }\n            setLoading(false)\n        });\n    }, [auth]);\n\n    return (\n        <div className=\"main-container\">\n            {loading ?\n                <Loader active />\n                : (loggedIn ?\n                    <TabContent />\n                    : <LoginPage />)\n            }\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport MainPage from \"./pages/MainPage\";\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction App() {\n\n  return (\n    <MainPage />\n\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}