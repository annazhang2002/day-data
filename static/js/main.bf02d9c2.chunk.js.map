{"version":3,"sources":["firebase.js","pages/MainPage/util.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","pages/DataPage/util.js","pages/DataPage/components/CompareData.js","pages/DataPage/components/AverageData.js","pages/DataPage/DataPage.js","pages/DataPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","FieldValue","dataRef","collection","parseIntVals","parseBooleanVals","MainPage","useState","activities","newActivity","date","Date","weather","hadBreakfast","rating","readingTime","data","setData","loggedToday","setLoggedToday","useEffect","orderBy","limit","onSnapshot","querySnapshot","forEach","doc","date1","date2","mostRecentDate","toDate","getDate","getMonth","getFullYear","error","console","log","addData","add","_","omit","then","_doc","catch","handleChange","event","target","id","value","val","includes","parseInt","parsedValue","to","type","onChange","onClick","e","input","concat","addToDataArray","map","item","index","journaled","min","max","allFields","allOperators","arrays","CompareData","field","setField","ratingArr","setRatingArr","option","ratings","values","Object","keys","sum","count","ratingArray","entries","key","average","push","AverageData","operator","queryData","setQueryData","setAverage","where","size","dataTypes","DataPage","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf02d9c2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDG3OOX85L4j93eBU_5YGfwKrHyqyR4zqo\",\n    authDomain: \"day-data-6a2e6.firebaseapp.com\",\n    databaseURL: \"https://day-data-6a2e6-default-rtdb.firebaseio.com\",\n    projectId: \"day-data-6a2e6\",\n    storageBucket: \"day-data-6a2e6.appspot.com\",\n    messagingSenderId: \"565567779519\",\n    appId: \"1:565567779519:web:bb0be02aba68467cbb0c0a\",\n    measurementId: \"G-W27M63J3LF\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const fieldValue = firebase.firestore().FieldValue;\nexport const dataRef = firebase.firestore().collection('daily-data');","export const sameDay = (date1, date2) => {\n    return date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear()\n}\n\nconst parseIntVals = ['rating'];\nconst parseBooleanVals = ['hadBreakfast', 'journaled'];\n\nexport const parsedValue = (id, val) => {\n    if (parseIntVals.includes(id)) {\n        return parseInt(val)\n    } else if (parseBooleanVals.includes(id)) {\n        return 'true' === val\n    } else {\n        return val;\n    }\n}","import { MainPage } from './MainPage'\nexport default MainPage\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, firestore } from '../../firebase'\nimport { sameDay, parsedValue } from './util';\nimport _ from \"lodash\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./mainpage.scss\";\n\nexport const MainPage = () => {\n    const [data, setData] = useState({\n        activities: [],\n        newActivity: '',\n        date: new Date(),\n        weather: '',\n        hadBreakfast: false,\n        rating: 5,\n        readingTime: 0,\n    })\n    const [loggedToday, setLoggedToday] = useState(false);\n\n    // check if there has been a log today\n    useEffect(() => {\n        dataRef\n            .orderBy('date', 'desc')\n            .limit(1)\n            .onSnapshot(\n                querySnapshot => {\n                    querySnapshot.forEach((doc) => {\n                        const mostRecentDate = doc.data().date.toDate();\n                        if (sameDay(mostRecentDate, new Date())) {\n                            setLoggedToday(true);\n                        } else {\n                            setLoggedToday(false);\n                        }\n                    });\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    })\n\n    // add the logged data to firebase\n    const addData = () => {\n        dataRef\n            .add(_.omit(data, ['newActivity']))\n            .then((_doc) => {\n                setLoggedToday(true)\n            })\n            .catch((error) => {\n                console.log(\"bad\" + error)\n            });\n    }\n\n    // update input log\n    const handleChange = (event) => {\n        const { id, value } = event.target;\n        setData({\n            ...data,\n            [id]: parsedValue(id, value),\n        });\n    };\n\n    const addToDataArray = (event, input) => {\n        const { id } = event.target;\n\n        setData({\n            ...data,\n            [id]: _.concat(data[id], [data[input]]),\n            [input]: '',\n        });\n    }\n\n    const logForm = () => (\n        <div>\n            <p>Weather: <input type=\"text\" id=\"weather\" value={data.weather} onChange={handleChange} /></p>\n            <p>Activites: <input type=\"text\" id=\"newActivity\" value={data.newActivity || \"\"} onChange={handleChange} />  <button id=\"activities\" onClick={(e) => addToDataArray(e, 'newActivity')}>Add Activity</button> </p>\n            {data.activities.map((item, index) => <p key={index}>{item}</p>)}\n            <p>Had Breakfast? <input type=\"checkbox\" id=\"hadBreakfast\" value={data.hadBreakfast} onChange={handleChange} /></p>\n            <p>Did you journal? <input type=\"checkbox\" id=\"journaled\" value={data.journaled} onChange={handleChange} /></p>\n            <p>Reading Time (in minutes): <input type=\"number\" id=\"readingTime\" min=\"0\" value={data.readingTime} onChange={handleChange} /></p>\n            <p>How would you rate today? <input type=\"number\" id=\"rating\" min=\"1\" max=\"10\" value={data.rating} onChange={handleChange} /></p>\n            <button onClick={addData}>Add Day</button>\n        </div>\n    );\n\n    return (\n        <div>\n            {!loggedToday\n                ? logForm()\n                : <Redirect to=\"/data\" />}\n        </div>\n    )\n}\n","\nexport const allFields = ['activities', 'hadBreakfast', 'readingTime', 'weather'];\nexport const allOperators = ['==', '<', '<=', '>', '>=', '!=', 'array-contains'];","import React, { useState, useEffect } from \"react\";\nimport \"./../datapage.scss\";\nimport { dataRef } from '../../../firebase'\nimport { allFields } from './../util'\n\nconst arrays = ['activities'];\n\nexport const CompareData = () => {\n    const [field, setField] = useState(allFields[0]);\n    const [ratingArr, setRatingArr] = useState([]);\n\n    const getResults = (event) => {\n        console.log(event)\n        dataRef\n            .onSnapshot(\n                querySnapshot => {\n                    var ratings = {};\n                    querySnapshot.forEach((doc) => {\n                        if (!arrays.includes(field)) {\n                            const value = doc.data()[field];\n                            const rating = doc.data().rating;\n                            if (Object.keys(ratings).includes(value)) {\n                                ratings[value].sum += rating;\n                                ratings[value].count++;\n                            } else {\n                                ratings[value] = {\n                                    sum: rating,\n                                    count: 1\n                                }\n                            }\n                        } else {\n                            const values = doc.data()[field];\n                            const rating = doc.data().rating;\n                            console.log(values)\n                            values.forEach(value => {\n                                if (Object.keys(ratings).includes(value)) {\n                                    ratings[value].sum += rating;\n                                    ratings[value].count++;\n                                } else {\n                                    ratings[value] = {\n                                        sum: rating,\n                                        count: 1\n                                    }\n                                }\n                            })\n                        }\n\n                    });\n                    var ratingArray = [];\n                    Object.entries(ratings).forEach((rating) => {\n                        const [key, value] = rating\n                        rating = {\n                            value: key,\n                            average: value.sum / value.count\n                        }\n                        ratingArray.push(rating)\n                    })\n                    setRatingArr(ratingArray)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>Which _ will make the best day?</h1>\n            <select id=\"field\" onChange={event => setField(event.target.value)}>\n                {allFields.map((option) => <option value={option}>{option}</option>)}\n            </select>\n            <button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</button>\n            {ratingArr.map((rating) => (<p>{rating.value}: {rating.average}</p>)\n            )}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef } from '../../../firebase'\nimport { allFields, allOperators } from './../util'\nimport \"./../datapage.scss\";\n\nexport const AverageData = () => {\n    const [queryData, setQueryData] = useState({\n        field: allFields[0],\n        operator: allOperators[0],\n        value: ''\n    })\n    const [average, setAverage] = useState(0);\n\n    // update input changes\n    const handleChange = (event) => {\n        const { id, value } = event.target;\n        setQueryData({\n            ...queryData,\n            [id]: value,\n        });\n    };\n\n    const getResults = (event) => {\n        console.log(event)\n        dataRef\n            .where(queryData.field, queryData.operator, queryData.value)\n            .onSnapshot(\n                querySnapshot => {\n                    var sum = 0;\n                    querySnapshot.forEach((doc) => {\n                        console.log(\"data\")\n                        console.log(doc.data())\n                        console.log(sum)\n                        const rating = doc.data().rating;\n                        sum += rating;\n                        console.log(rating)\n                        console.log(sum)\n                    });\n                    setAverage(sum / querySnapshot.size)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>How good will my day be if...</h1>\n            <select id=\"field\" onChange={handleChange}>\n                {allFields.map((field) => <option value={field}>{field}</option>)}\n            </select>\n            <select id=\"operator\" onChange={handleChange}>\n                {allOperators.map((operator) => <option value={operator}>{operator}</option>)}\n            </select>\n            <input type=\"text\" id=\"value\" value={queryData.value} onChange={handleChange} />\n            <button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</button>\n            {average != 0 && <p>Rating: {average}</p>}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, firestore } from '../../firebase'\nimport _ from \"lodash\";\nimport \"./datapage.scss\";\nimport { CompareData } from './components/CompareData.js'\nimport { AverageData } from './components/AverageData.js'\n\nconst dataTypes = ['average', 'compare'];\n\nexport const DataPage = () => {\n    const [dataType, setDataType] = useState(dataTypes[0]);\n\n    return (\n        <div>\n            <AverageData />\n            <CompareData />\n        </div>\n    )\n}\n","import { DataPage } from './DataPage'\nexport default DataPage\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport DataPage from \"./pages/DataPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={MainPage} />\n      <Route path=\"/data\" component={DataPage} />\n    </BrowserRouter>\n\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}