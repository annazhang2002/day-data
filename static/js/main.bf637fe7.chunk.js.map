{"version":3,"sources":["firebase.js","pages/LogFormPage/util.js","pages/LogFormPage/LogFormPage.js","pages/LogFormPage/index.js","pages/DataPage/util.js","pages/DataPage/components/CompareData.js","pages/DataPage/components/AverageData.js","pages/DataPage/DataPage.js","pages/DataPage/index.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","FieldValue","dataRef","collection","colors","parseIntVals","parseBooleanVals","dataFields","food","type","name","new","add","activities","exercise","hadBreakfast","journaled","showered","dressup","skincare","peopleSaw","readingTime","min","max","weather","rating","defaultDataState","date","Date","newActivity","newExercise","newFood","newPerson","LogFormPage","useState","data","setData","handleChange","event","target","id","value","val","oldVal","includes","parseInt","parsedValue","addToDataArray","input","detail","_","concat","Form","Field","inline","Input","toISOString","split","onChange","Object","entries","map","key","style","marginBottom","Group","flexDirection","onClick","e","label","Button","labelPosition","item","index","Label","color","paddingTop","paddingBottom","marginTop","Icon","without","deleteFromArray","Checkbox","checked","placeholder","primary","omit","then","_doc","catch","error","console","log","allFields","allOperators","arrays","CompareData","field","setField","ratingArr","setRatingArr","option","onSnapshot","querySnapshot","ratings","forEach","doc","values","keys","sum","count","ratingArray","average","push","AverageData","operator","queryData","setQueryData","setAverage","where","size","dataTypes","DataPage","MainPage","useEffect","orderBy","limit","toDate","panes","menuItem","render","Tab","Pane","className","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf637fe7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDG3OOX85L4j93eBU_5YGfwKrHyqyR4zqo\",\n    authDomain: \"day-data-6a2e6.firebaseapp.com\",\n    databaseURL: \"https://day-data-6a2e6-default-rtdb.firebaseio.com\",\n    projectId: \"day-data-6a2e6\",\n    storageBucket: \"day-data-6a2e6.appspot.com\",\n    messagingSenderId: \"565567779519\",\n    appId: \"1:565567779519:web:bb0be02aba68467cbb0c0a\",\n    measurementId: \"G-W27M63J3LF\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const fieldValue = firebase.firestore().FieldValue;\nexport const dataRef = firebase.firestore().collection('daily-data');","export const sameDay = (date1, date2) => {\n    return date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear()\n}\n\nconst colors = {\n    'activities': 'pink',\n    'food': 'yellow',\n    'exercise': 'teal',\n    'peopleSaw': 'violet',\n}\n\nexport const getColor = (id) => {\n    return colors[id]\n}\n\nconst parseIntVals = ['rating'];\nconst parseBooleanVals = ['hadBreakfast', 'journaled'];\n\nexport const parsedValue = (id, val, oldVal) => {\n    if (parseIntVals.includes(id)) {\n        return parseInt(val)\n    } else if (parseBooleanVals.includes(id)) {\n        return !oldVal\n    } else if (id === 'date') {\n        return new Date(val);\n    } else {\n        return val;\n    }\n}","import React, { useState } from \"react\";\nimport { dataRef } from '../../firebase'\nimport { parsedValue, getColor } from './util';\nimport _ from \"lodash\";\nimport { Input, Button, Checkbox, Form, Label, Icon } from 'semantic-ui-react'\nimport \"./logformpage.scss\";\n\nconst dataFields = {\n    food: {\n        type: 'array',\n        name: 'Food:',\n        new: 'newFood',\n        add: 'Food',\n    },\n    activities: {\n        type: 'array',\n        name: 'Activities:',\n        new: 'newActivity',\n        add: 'Activity',\n    },\n    exercise: {\n        type: 'array',\n        name: 'Exercise:',\n        new: 'newExercise',\n        add: 'Exercise',\n    },\n    hadBreakfast: {\n        type: 'checkbox',\n        name: 'Had Breakfast?',\n    },\n    journaled: {\n        type: 'checkbox',\n        name: 'Did I Journal?',\n    },\n    showered: {\n        type: 'checkbox',\n        name: 'Did I Shower?',\n    },\n    dressup: {\n        type: 'checkbox',\n        name: 'Did I Dress Up or Feel Cute?',\n    },\n    skincare: {\n        type: 'checkbox',\n        name: 'Did I Do My Skincare Routine?',\n    },\n    peopleSaw: {\n        type: 'array',\n        name: 'People I Saw:',\n        new: 'newPerson',\n        add: 'Person',\n    },\n    readingTime: {\n        type: 'number',\n        name: 'Reading Time (in minutes):',\n        min: 0,\n        max: 3600,\n    },\n    weather: {\n        type: 'text',\n        name: 'Weather:',\n    },\n    rating: {\n        type: 'number',\n        name: 'How would you rate today?',\n        min: 0,\n        max: 10\n    },\n}\n\nconst defaultDataState = {\n    activities: [],\n    date: new Date(),\n    dressup: false,\n    exercise: [],\n    food: [],\n    hadBreakfast: false,\n    journaled: false,\n    newActivity: '',\n    newExercise: '',\n    newFood: '',\n    newPerson: '',\n    peopleSaw: [],\n    showered: false,\n    skincare: false,\n    rating: 5,\n    readingTime: 0,\n    weather: '',\n}\n\nexport const LogFormPage = () => {\n    const [data, setData] = useState(defaultDataState);\n\n    // add the logged data to firebase\n    const addData = () => {\n        // console.log(_.omit(data, ['newActivity', 'newExercise', 'newPerson', 'newFood', '']))\n        dataRef\n            .add(_.omit(data, ['newActivity', 'newExercise', 'newPerson', 'newFood', '']))\n            .then((_doc) => {\n                setData(defaultDataState);\n            })\n            .catch((error) => {\n                console.log(\"bad\" + error)\n            });\n    }\n\n    // update input log\n    const handleChange = (event) => {\n        const { id, value } = event.target;\n        setData({\n            ...data,\n            [id]: parsedValue(id, value, data[id]),\n        });\n    };\n\n    const addToDataArray = (event, input) => {\n        const { id } = event.target;\n\n        if (event.detail !== 0 && data[input] !== \"\") {\n            setData({\n                ...data,\n                [id]: _.concat(data[id], [data[input]]),\n                [input]: '',\n            });\n        }\n    }\n\n    const deleteFromArray = (value, key) => {\n        setData({\n            ...data,\n            [key]: _.without(data[key], value)\n        })\n    }\n\n    return (\n        <Form>\n            <Form.Field inline>\n                <label>Date</label>\n                <Input type=\"date\" id=\"date\" value={data.date.toISOString().split('T')[0]} onChange={handleChange} />\n            </Form.Field>\n            {Object.entries(dataFields).map(([key, value]) => {\n                if (value.type === 'array') {\n                    return (\n                        <div style={{ marginBottom: '20px' }}>\n                            <Form.Group style={{ flexDirection: 'column' }}>\n                                <Form.Field inline>\n                                    <label>{value.name}</label>\n                                    <Input type=\"text\" id={value.new} value={data[value.new] || \"\"} onChange={handleChange} onClick={(e) => addToDataArray(e, value.new)} label={<Button id={key} onClick={(e) => addToDataArray(e, value.new)}>Add {value.add}</Button>} labelPosition='right' />\n                                </Form.Field>\n                                <div style={{ flexDirection: 'row' }}>\n                                    {data[key].map((item, index) =>\n                                        <Label key={index} color={getColor(key)} style={{ paddingTop: '.78571429em', paddingBottom: '.78571429em', marginTop: '5px' }}>\n                                            {item}\n                                            <Icon name='delete' onClick={() => deleteFromArray(item, key)} />\n                                        </Label>)}\n                                </div>\n                            </Form.Group>\n                        </div>\n                    );\n                } else if (value.type === 'number') {\n                    return (<Form.Field inline>\n                        <label>{value.name}</label>\n                        <Input type={value.type} min={value.min} max={value.max} id={key} value={data[key]} onChange={handleChange} />\n                    </Form.Field>)\n                } else if (value.type === 'checkbox') {\n                    return (<Form.Field inline>\n                        <label>{value.name}</label>\n                        <Checkbox type={value.type} id={key} checked={data[key]} onChange={handleChange} />\n                    </Form.Field>)\n                } else {\n                    return (<Form.Field inline>\n                        <label>{value.name}</label>\n                        <Input placeholder={value.name} type={value.type} id={key} value={data[key]} onChange={handleChange} />\n                    </Form.Field>)\n                }\n            })}\n            <Button primary onClick={addData}>Add Day</Button>\n        </Form>\n    )\n}\n","import { LogFormPage } from './LogFormPage'\nexport default LogFormPage\n","\nexport const allFields = ['activities', 'hadBreakfast', 'readingTime', 'weather'];\nexport const allOperators = ['==', '<', '<=', '>', '>=', '!=', 'array-contains'];","import React, { useState, useEffect } from \"react\";\nimport \"./../datapage.scss\";\nimport { dataRef } from '../../../firebase'\nimport { allFields } from './../util'\n\nconst arrays = ['activities'];\n\nexport const CompareData = () => {\n    const [field, setField] = useState(allFields[0]);\n    const [ratingArr, setRatingArr] = useState([]);\n\n    const getResults = (event) => {\n        console.log(event)\n        dataRef\n            .onSnapshot(\n                querySnapshot => {\n                    var ratings = {};\n                    querySnapshot.forEach((doc) => {\n                        if (!arrays.includes(field)) {\n                            const value = doc.data()[field];\n                            const rating = doc.data().rating;\n                            if (Object.keys(ratings).includes(value)) {\n                                ratings[value].sum += rating;\n                                ratings[value].count++;\n                            } else {\n                                ratings[value] = {\n                                    sum: rating,\n                                    count: 1\n                                }\n                            }\n                        } else {\n                            const values = doc.data()[field];\n                            const rating = doc.data().rating;\n                            console.log(values)\n                            values.forEach(value => {\n                                if (Object.keys(ratings).includes(value)) {\n                                    ratings[value].sum += rating;\n                                    ratings[value].count++;\n                                } else {\n                                    ratings[value] = {\n                                        sum: rating,\n                                        count: 1\n                                    }\n                                }\n                            })\n                        }\n\n                    });\n                    var ratingArray = [];\n                    Object.entries(ratings).forEach((rating) => {\n                        const [key, value] = rating\n                        rating = {\n                            value: key,\n                            average: value.sum / value.count\n                        }\n                        ratingArray.push(rating)\n                    })\n                    setRatingArr(ratingArray)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>Which _ will make the best day?</h1>\n            <select id=\"field\" onChange={event => setField(event.target.value)}>\n                {allFields.map((option) => <option value={option}>{option}</option>)}\n            </select>\n            <button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</button>\n            {ratingArr.map((rating) => (<p>{rating.value}: {rating.average}</p>)\n            )}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef } from '../../../firebase'\nimport { allFields, allOperators } from './../util'\nimport \"./../datapage.scss\";\n\nexport const AverageData = () => {\n    const [queryData, setQueryData] = useState({\n        field: allFields[0],\n        operator: allOperators[0],\n        value: ''\n    })\n    const [average, setAverage] = useState(0);\n\n    // update input changes\n    const handleChange = (event) => {\n        const { id, value } = event.target;\n        setQueryData({\n            ...queryData,\n            [id]: value,\n        });\n    };\n\n    const getResults = (event) => {\n        console.log(event)\n        dataRef\n            .where(queryData.field, queryData.operator, queryData.value)\n            .onSnapshot(\n                querySnapshot => {\n                    var sum = 0;\n                    querySnapshot.forEach((doc) => {\n                        console.log(\"data\")\n                        console.log(doc.data())\n                        console.log(sum)\n                        const rating = doc.data().rating;\n                        sum += rating;\n                        console.log(rating)\n                        console.log(sum)\n                    });\n                    setAverage(sum / querySnapshot.size)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>How good will my day be if...</h1>\n            <select id=\"field\" onChange={handleChange}>\n                {allFields.map((field) => <option value={field}>{field}</option>)}\n            </select>\n            <select id=\"operator\" onChange={handleChange}>\n                {allOperators.map((operator) => <option value={operator}>{operator}</option>)}\n            </select>\n            <input type=\"text\" id=\"value\" value={queryData.value} onChange={handleChange} />\n            <button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</button>\n            {average != 0 && <p>Rating: {average}</p>}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, firestore } from '../../firebase'\nimport _ from \"lodash\";\nimport \"./datapage.scss\";\nimport { CompareData } from './components/CompareData.js'\nimport { AverageData } from './components/AverageData.js'\n\nconst dataTypes = ['average', 'compare'];\n\nexport const DataPage = () => {\n    const [dataType, setDataType] = useState(dataTypes[0]);\n\n    return (\n        <div>\n            <AverageData />\n            <CompareData />\n        </div>\n    )\n}\n","import { DataPage } from './DataPage'\nexport default DataPage\n","import { MainPage } from './MainPage'\nexport default MainPage\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef } from '../../firebase'\nimport _ from \"lodash\";\nimport { Tab } from 'semantic-ui-react'\nimport \"./mainpage.scss\";\nimport LogFormPage from '../LogFormPage'\nimport DataPage from '../DataPage'\n\nexport const MainPage = () => {\n    const [loggedToday, setLoggedToday] = useState(false);\n\n    // check if there has been a log today\n    useEffect(() => {\n        dataRef\n            .orderBy('date', 'desc')\n            .limit(1)\n            .onSnapshot(\n                querySnapshot => {\n                    querySnapshot.forEach((doc) => {\n                        const mostRecentDate = doc.data().date.toDate();\n                        // if (sameDay(mostRecentDate, new Date())) {\n                        //     setLoggedToday(true);\n                        // } else {\n                        //     setLoggedToday(false);\n                        // }\n                    });\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    })\n\n    const panes = [\n        { menuItem: 'Logging Form', render: () => <Tab.Pane><LogFormPage /></Tab.Pane> },\n        { menuItem: 'Data Analysis', render: () => <Tab.Pane><DataPage /></Tab.Pane> },\n        { menuItem: 'Table Data', render: () => <Tab.Pane>Tab 3 Content</Tab.Pane> },\n    ]\n\n    return (\n        <div className=\"main-container\">\n            <Tab panes={panes} className=\"tabs-container\" />\n        </div>\n    )\n}\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport DataPage from \"./pages/DataPage\";\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={MainPage} />\n      <Route path=\"/data\" component={DataPage} />\n    </BrowserRouter>\n\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}