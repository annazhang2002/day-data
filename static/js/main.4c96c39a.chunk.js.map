{"version":3,"sources":["firebase.js","static/data.js","static/util.js","components/ListTags/ListTags.js","components/FieldInput/FieldInput.js","pages/LogFormPage/index.js","pages/LogFormPage/LogFormPage.js","pages/DataPage/util.js","pages/DataPage/components/CompareData.js","pages/DataPage/components/AverageData.js","pages/DataPage/DataPage.js","pages/DataPage/index.js","pages/TablePage/index.js","pages/TablePage/TablePage.js","pages/TabContent/index.js","pages/TabContent/TabContent.js","pages/LoginPage/index.js","pages/LoginPage/LoginPage.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","dataRef","collection","provider","GoogleAuthProvider","dataFields","date","type","name","tableHeader","editInTable","rating","min","max","excitement","stress","activities","new","add","hadBreakfast","dressup","exercise","food","journaled","peopleSaw","readingTime","showered","skincare","weather","defaultDataState","Date","newActivity","newExercise","newFood","newPerson","colors","parseIntVals","Object","keys","_","pickBy","field","parseBooleanVals","parsedValue","id","val","oldVal","includes","parseInt","ListTags","props","data","onDelete","fieldKey","style","flexDirection","map","item","index","Label","color","paddingTop","paddingBottom","marginTop","Icon","onClick","FieldInput","dataValue","onDeleteFromArray","dataFromKey","handleChange","newArrayValue","addToDataArray","onArrayInputChanged","Input","value","onChange","label","Button","e","labelPosition","Checkbox","checked","toISOString","split","placeholder","LogFormPage","useState","setData","event","target","input","detail","concat","Form","entries","key","Field","inline","without","deleteFromArray","primary","finalData","omit","user","currentUser","uid","console","log","then","_doc","catch","error","allFields","allOperators","arrayFields","filter","fieldSelectionOptions","substring","length","operatorSelectionOptions","operator","CompareData","setField","ratingArr","setRatingArr","Grid","stackable","columns","Row","Column","Dropdown","fluid","selection","options","where","onSnapshot","querySnapshot","ratings","forEach","doc","values","sum","count","ratingArray","average","push","AverageData","queryData","setQueryData","setAverage","size","dataTypes","DataPage","Divider","TablePage","tableValues","setTableValues","rowIndex","fieldName","fieldValue","inUse","editField","setEditField","loading","setLoading","newListItem","setNewListItem","useEffect","orderBy","queryTableValues","row","newRowValues","header","cellValue","seconds","show","displayValue","Array","isArray","toDateString","disabled","toggleEditCell","addValuetoArray","newProp","className","data-label","onInputChanged","itemValue","itemVal","oldValue","newFieldValue","update","String","signOut","TabContent","panes","menuItem","render","Tab","Pane","LoginPage","Container","textAlign","Header","as","signInWithPopup","response","MainPage","loggedIn","toggleLogin","onAuthStateChanged","Loader","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c96c39a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDG3OOX85L4j93eBU_5YGfwKrHyqyR4zqo\",\n    authDomain: \"day-data-6a2e6.firebaseapp.com\",\n    databaseURL: \"https://day-data-6a2e6-default-rtdb.firebaseio.com\",\n    projectId: \"day-data-6a2e6\",\n    storageBucket: \"day-data-6a2e6.appspot.com\",\n    messagingSenderId: \"565567779519\",\n    appId: \"1:565567779519:web:bb0be02aba68467cbb0c0a\",\n    measurementId: \"G-W27M63J3LF\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const dataRef = firestore.collection('daily-data');\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const userDoc = (uid) => { return firestore.doc('users/' + uid) };","import _ from \"lodash\";\n\nexport const dataFields = {\n    date: {\n        type: 'date',\n        name: 'Date: ',\n        tableHeader: 'Date',\n        editInTable: false,\n    },\n    rating: {\n        type: 'number',\n        name: 'How happy were you today?',\n        min: 0,\n        max: 10,\n        tableHeader: 'Happiness',\n        editInTable: true,\n    },\n    excitement: {\n        type: 'number',\n        name: 'How exciting was today?',\n        min: 0,\n        max: 10,\n        tableHeader: 'Excitement',\n        editInTable: true,\n    },\n    stress: {\n        type: 'number',\n        name: 'How stressed were you today?',\n        min: 0,\n        max: 10,\n        tableHeader: 'Stress',\n        editInTable: true,\n    },\n    activities: {\n        type: 'array',\n        name: 'Activities:',\n        new: 'newActivity',\n        add: 'Activity',\n        tableHeader: 'Activities',\n        editInTable: true,\n    },\n    hadBreakfast: {\n        type: 'checkbox',\n        name: 'Had Breakfast?',\n        tableHeader: 'Breakfast',\n        editInTable: true,\n    },\n    dressup: {\n        type: 'checkbox',\n        name: 'Did I Dress Up or Feel Cute?',\n        tableHeader: 'Dressed Up',\n        editInTable: true,\n    },\n    exercise: {\n        type: 'array',\n        name: 'Exercise:',\n        new: 'newExercise',\n        add: 'Exercise',\n        tableHeader: 'Exercise',\n        editInTable: true,\n    },\n    food: {\n        type: 'array',\n        name: 'Food:',\n        new: 'newFood',\n        add: 'Food',\n        tableHeader: 'Food',\n        editInTable: true,\n    },\n    journaled: {\n        type: 'checkbox',\n        name: 'Did I Journal?',\n        tableHeader: 'Journaled',\n        editInTable: true,\n    },\n    peopleSaw: {\n        type: 'array',\n        name: 'People I Saw:',\n        new: 'newPerson',\n        add: 'Person',\n        tableHeader: 'People I Saw',\n        editInTable: true,\n    },\n    readingTime: {\n        type: 'number',\n        name: 'Reading Time (in minutes):',\n        min: 0,\n        max: 3600,\n        tableHeader: 'Reading Time',\n        editInTable: true,\n    },\n    showered: {\n        type: 'checkbox',\n        name: 'Did I Shower?',\n        tableHeader: 'Showered',\n        editInTable: true,\n    },\n    skincare: {\n        type: 'checkbox',\n        name: 'Did I Do My Skincare Routine?',\n        tableHeader: 'Skincare',\n        editInTable: true,\n    },\n    weather: {\n        type: 'text',\n        name: 'Weather:',\n        tableHeader: 'Weather',\n        editInTable: true,\n    },\n}\n\nexport const defaultDataState = {\n    activities: [],\n    date: new Date(),\n    dressup: false,\n    exercise: [],\n    food: [],\n    hadBreakfast: false,\n    journaled: false,\n    newActivity: '',\n    newExercise: '',\n    newFood: '',\n    newPerson: '',\n    peopleSaw: [],\n    showered: false,\n    skincare: false,\n    rating: 5,\n    excitement: 5,\n    stress: 5,\n    readingTime: 0,\n    weather: '',\n}\n\n\nexport const colors = {\n    'activities': 'pink',\n    'food': 'yellow',\n    'exercise': 'teal',\n    'peopleSaw': 'violet',\n}\n\nexport const getColor = (id) => {\n    return colors[id]\n}\n\nexport const parseIntVals = Object.keys(_.pickBy(dataFields, (field) => field.type === 'number'));\nexport const parseBooleanVals = Object.keys(_.pickBy(dataFields, (field) => field.type === 'checkbox'));","import { colors, parseIntVals, parseBooleanVals } from './data'\n\nexport const sameDay = (date1, date2) => {\n    return date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear()\n}\n\nexport const getColor = (id) => {\n    return colors[id]\n}\n\nexport const parsedValue = (id, val, oldVal) => {\n    if (parseIntVals.includes(id)) {\n        return parseInt(val)\n    } else if (parseBooleanVals.includes(id)) {\n        return !oldVal\n    } else if (id === 'date') {\n        return new Date(val + \" \");\n    } else {\n        return val;\n    }\n}","import React from \"react\";\nimport \"./ListTags.scss\";\nimport { Label, Icon } from 'semantic-ui-react'\nimport { getColor } from '../../static/util';\n\nexport const ListTags = (props) => {\n    const { data, onDelete, fieldKey } = props;\n\n    return (\n        <div style={{ flexDirection: 'row' }}>\n            {data.map((item, index) =>\n                <Label key={index} color={getColor(fieldKey)} style={{ paddingTop: '.78571429em', paddingBottom: '.78571429em', marginTop: '5px' }}>\n                    {item}\n                    <Icon name='delete' onClick={() => onDelete(item)} />\n                </Label>)}\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Input, Button, Checkbox } from 'semantic-ui-react'\nimport { ListTags } from '../ListTags/ListTags'\n\nexport const FieldInput = (props) => {\n    const { dataValue, onDeleteFromArray, dataFromKey, fieldKey, handleChange, newArrayValue, addToDataArray, onArrayInputChanged } = props;\n\n    if (dataValue.type === 'array') {\n        return (\n            <div>\n                <Input\n                    type=\"text\"\n                    id={dataValue.new}\n                    value={newArrayValue || \"\"}\n                    onChange={onArrayInputChanged || handleChange}\n                    label={<Button id={fieldKey} onClick={(e) => addToDataArray(e, dataValue.new)}>Add {dataValue.add}</Button>}\n                    labelPosition='right' />\n                <ListTags data={dataFromKey} onDelete={onDeleteFromArray} fieldKey={fieldKey} />\n            </div>\n        );\n    } else if (dataValue.type === 'number') {\n        return <Input type={dataValue.type} min={dataValue.min} max={dataValue.max} id={fieldKey} value={dataFromKey} onChange={handleChange} />\n    } else if (dataValue.type === 'checkbox') {\n        return <Checkbox type={dataValue.type} id={fieldKey} checked={dataFromKey} onChange={handleChange} />\n    } else if (dataValue.type === 'date') {\n        return <Input type={dataValue.type} id={fieldKey} value={dataFromKey.toISOString().split('T')[0]} onChange={handleChange} />\n    } else {\n        return <Input placeholder={dataValue.name} type={dataValue.type} id={fieldKey} value={dataFromKey} onChange={handleChange} />\n    }\n}\n","import { LogFormPage } from './LogFormPage'\nexport default LogFormPage\n","import React, { useState } from \"react\";\nimport { dataRef, auth } from '../../firebase'\nimport { parsedValue } from '../../static/util';\nimport _ from \"lodash\";\nimport { Button, Form } from 'semantic-ui-react'\nimport { defaultDataState, dataFields } from '../../static/data'\nimport \"./logformpage.scss\";\nimport { FieldInput } from \"../../components/FieldInput/FieldInput\";\n\nexport const LogFormPage = () => {\n    const [data, setData] = useState(defaultDataState);\n\n    // add the logged data to firebase\n    const addData = () => {\n        var finalData = _.omit(data, ['newActivity', 'newExercise', 'newPerson', 'newFood', ''])\n        finalData = { ...finalData, user: auth.currentUser.uid }\n        console.log(finalData)\n        dataRef\n            .add(finalData)\n            .then((_doc) => {\n                setData(defaultDataState);\n            })\n            .catch((error) => {\n                console.log(\"bad\" + error)\n            });\n    }\n\n    // update input log\n    const handleChange = (event) => {\n        const { id, value } = event.target;\n        setData({\n            ...data,\n            [id]: parsedValue(id, value, data[id]),\n        });\n    };\n\n    const addToDataArray = (event, input) => {\n        const { id } = event.target;\n\n        if (event.detail !== 0 && data[input] !== \"\") {\n            setData({\n                ...data,\n                [id]: _.concat(data[id], [data[input]]),\n                [input]: '',\n            });\n        }\n    }\n\n    const deleteFromArray = (value, key) => {\n        setData({\n            ...data,\n            [key]: _.without(data[key], value)\n        })\n    }\n\n    return (\n        <Form>\n            {Object.entries(dataFields).map(([key, value]) => {\n                return <Form.Field inline key={key}>\n                    <label>{value.name}</label>\n                    <FieldInput\n                        dataValue={value}\n                        fieldKey={key}\n                        dataFromKey={data[key]}\n                        handleChange={handleChange}\n                        onDeleteFromArray={(item) => deleteFromArray(item, key)}\n                        newArrayValue={data[value.new]}\n                        addToDataArray={addToDataArray} />\n                </Form.Field>\n\n            })}\n            <Button primary onClick={addData}>Add Day</Button>\n        </Form>\n    )\n}\n","import { dataFields } from '../../static/data'\nimport _ from \"lodash\";\n\nexport const allFields = Object.keys(dataFields);\nexport const allOperators = ['==', '<', '<=', '>', '>=', '!=', 'array-contains'];\nexport const arrayFields = _.filter(Object.entries(dataFields), ([value]) => value.type === 'array').map(([key]) => key);\n\nexport const fieldSelectionOptions = Object.entries(dataFields).map(([key, value]) => {\n    return {\n        'key': key,\n        'text': value.name.substring(0, value.name.length - 1),\n        'value': key,\n        'id': 'field',\n    }\n});\n\nexport const operatorSelectionOptions = allOperators.map((operator) => {\n    return {\n        'key': operator,\n        'text': operator,\n        'value': operator,\n        'id': 'operator',\n    }\n})\n","import React, { useState } from \"react\";\nimport \"./../datapage.scss\";\nimport { dataRef, auth } from '../../../firebase'\nimport { allFields, arrayFields, fieldSelectionOptions } from './../util'\nimport { Dropdown, Button, Grid } from 'semantic-ui-react'\n\nexport const CompareData = () => {\n    const [field, setField] = useState(allFields[0]);\n    const [ratingArr, setRatingArr] = useState([]);\n\n    const getResults = (event) => {\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .onSnapshot(\n                querySnapshot => {\n                    var ratings = {};\n                    querySnapshot.forEach((doc) => {\n                        if (!arrayFields.includes(field)) {\n                            const value = doc.data()[field];\n                            const rating = doc.data().rating;\n                            if (Object.keys(ratings).includes(value)) {\n                                ratings[value].sum += rating;\n                                ratings[value].count++;\n                            } else {\n                                ratings[value] = {\n                                    sum: rating,\n                                    count: 1\n                                }\n                            }\n                        } else {\n                            const values = doc.data()[field];\n                            const rating = doc.data().rating;\n                            console.log(values)\n                            values.forEach(value => {\n                                if (Object.keys(ratings).includes(value)) {\n                                    ratings[value].sum += rating;\n                                    ratings[value].count++;\n                                } else {\n                                    ratings[value] = {\n                                        sum: rating,\n                                        count: 1\n                                    }\n                                }\n                            })\n                        }\n\n                    });\n                    var ratingArray = [];\n                    Object.entries(ratings).forEach((rating) => {\n                        const [key, value] = rating\n                        rating = {\n                            value: key,\n                            average: value.sum / value.count\n                        }\n                        ratingArray.push(rating)\n                    })\n                    setRatingArr(ratingArray)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>Which _ will make the best day?</h1>\n            <Grid stackable columns={2}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Field'\n                            fluid\n                            selection\n                            options={fieldSelectionOptions}\n                            id=\"field\"\n                            onChange={(event, { value }) => setField(value)} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            {ratingArr.map((rating) => (<h3>{rating.value}: {rating.average}</h3>)\n            )}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, auth, userDoc } from '../../../firebase'\nimport { allFields, allOperators, fieldSelectionOptions, operatorSelectionOptions } from './../util'\nimport \"./../datapage.scss\";\nimport { Dropdown, Input, Button, Grid } from 'semantic-ui-react'\n\nexport const AverageData = () => {\n\n    const [queryData, setQueryData] = useState({\n        field: allFields[0],\n        operator: allOperators[0],\n        value: ''\n    })\n    const [average, setAverage] = useState(0);\n\n    // update input changes\n    const handleChange = (event, value, id) => {\n        setQueryData({\n            ...queryData,\n            [id]: value,\n        });\n    };\n\n    const getResults = (event) => {\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .where(queryData.field, queryData.operator, queryData.value)\n            .onSnapshot(\n                querySnapshot => {\n                    var sum = 0;\n                    console.log(querySnapshot)\n                    querySnapshot.forEach((doc) => {\n                        const rating = doc.data().rating;\n                        sum += rating;\n                    });\n                    setAverage(sum / querySnapshot.size)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>How good will my day be if...</h1>\n            <Grid stackable columns={4}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Field'\n                            fluid\n                            selection\n                            options={fieldSelectionOptions}\n                            id=\"field\"\n                            onChange={(event, { value }) => handleChange(event, value, 'field')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Dropdown\n                            placeholder='Operator'\n                            fluid\n                            selection\n                            options={operatorSelectionOptions}\n                            id=\"operator\"\n                            onChange={(event, { value }) => handleChange(event, value, 'operator')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Input placeholder=\"Value\" fluid type=\"text\" id=\"value\" value={queryData.value} onChange={(event, { value }) => handleChange(event, value, 'value')} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Button id=\"getResults\" onClick={(e) => getResults(e)}>Calculate!</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            {average != 0 && <h3>Rating: {average}</h3>}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, firestore } from '../../firebase'\nimport _ from \"lodash\";\nimport \"./datapage.scss\";\nimport { CompareData } from './components/CompareData.js'\nimport { AverageData } from './components/AverageData.js'\nimport { Divider } from 'semantic-ui-react'\n\nconst dataTypes = ['average', 'compare'];\n\nexport const DataPage = () => {\n    const [dataType, setDataType] = useState(dataTypes[0]);\n\n    return (\n        <div>\n            <AverageData />\n            <Divider />\n            <CompareData />\n        </div>\n    )\n}\n","import { DataPage } from './DataPage'\nexport default DataPage\n","import { TablePage } from './TablePage'\nexport default TablePage\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, auth } from '../../firebase'\nimport _ from \"lodash\";\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport \"./tablepage.scss\";\nimport { dataFields } from '../../static/data'\nimport { parsedValue } from '../../static/util';\nimport { ListTags } from '../../components/ListTags/ListTags'\nimport { FieldInput } from \"../../components/FieldInput/FieldInput\";\n\nexport const TablePage = () => {\n    const [tableValues, setTableValues] = useState([]);\n    const [editField, setEditField] = useState({\n        rowIndex: 0,\n        fieldName: \"rating\",\n        fieldValue: 5,\n        inUse: false,\n    })\n    const [loading, setLoading] = useState(true);\n    const [newListItem, setNewListItem] = useState();\n\n    useEffect(() => {\n        console.log(\"use effect to get table data\")\n        dataRef\n            .where('user', '==', auth.currentUser.uid)\n            .orderBy('date', 'desc')\n            .onSnapshot(\n                querySnapshot => {\n                    var queryTableValues = [];\n                    querySnapshot.forEach((doc) => {\n                        const row = doc.data();\n                        var newRowValues = {};\n                        Object.entries(dataFields).map(([key, value]) => {\n                            const fieldValue = row[key];\n                            newRowValues[key] = {\n                                header: value.tableHeader,\n                                cellValue: fieldValue instanceof Object && fieldValue.seconds ? new Date(fieldValue.seconds * 1000) : fieldValue,\n                                show: true,\n                                type: value.type,\n                                id: doc.id,\n                            }\n                        })\n                        queryTableValues.push(newRowValues);\n                    });\n                    setTableValues(queryTableValues)\n                    console.log(queryTableValues)\n                    setLoading(false)\n                },\n                error => {\n                    console.log(error);\n                }\n            )\n    }, [loading]);\n\n    const displayValue = (value, key) => {\n        if (Array.isArray(value)) {\n            return (\n                <ListTags data={value} fieldKey={key} />\n            )\n        } else if (value instanceof Date) {\n            return value.toDateString();\n        } else if (typeof value == \"boolean\") {\n            return <Checkbox checked={value} disabled />\n        }\n        return value\n    }\n\n    const toggleEditCell = (rowIndex, fieldName, fieldValue) => {\n        setEditField({\n            rowIndex,\n            fieldName,\n            fieldValue,\n            inUse: !editField.inUse\n        })\n    }\n\n    const onInputChanged = (event, field) => {\n        setEditField({ ...editField, fieldValue: parsedValue(field, event.target.value, editField.fieldValue) })\n    }\n\n    const submitChange = (id, fieldName, oldValue, newFieldValue) => {\n        dataRef.doc(id).update({ [fieldName]: parsedValue(fieldName, newFieldValue, oldValue) }).then(() => {\n            toggleEditCell();\n            setLoading(true);\n        });\n    }\n\n    const removeValueFromArray = (itemVal) => {\n        setEditField({ ...editField, fieldValue: _.without(editField.fieldValue, itemVal) })\n    }\n\n    const addValuetoArray = (e, newProp) => {\n        setEditField({ ...editField, fieldValue: _.concat(editField.fieldValue, (newListItem)) })\n        setNewListItem(\"\")\n    }\n    return (\n        <div>\n            <h1>Table Data</h1>\n            {!loading && tableValues && (\n                <table className=\"ui celled table\">\n                    <thead>\n                        <tr>\n                            {Object.values(tableValues[0]).map((field, index) => {\n                                return (<th key={index} className=\"col-name\">{field.header}</th>)\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tableValues.map((row, index) => {\n                            return (\n                                <tr key={index}>\n                                    {Object.entries(row).map(([key, value]) => {\n                                        return (\n                                            <td data-label={key} key={key + String(index)} >\n                                                {editField.inUse && editField.fieldName === key && editField.rowIndex === index ?\n                                                    <div className=\"ui action input\">\n                                                        <FieldInput\n                                                            dataValue={dataFields[key]}\n                                                            fieldKey={key}\n                                                            dataFromKey={editField.fieldValue}\n                                                            handleChange={(event) => onInputChanged(event)}\n                                                            onArrayInputChanged={(e) => setNewListItem(e.target.value)}\n                                                            onDeleteFromArray={(itemValue) => removeValueFromArray(itemValue)}\n                                                            newArrayValue={newListItem}\n                                                            addToDataArray={addValuetoArray} />\n                                                        <Button onClick={() => submitChange(value.id, key, value.cellValue, editField.fieldValue)}>Done</Button>\n                                                    </div>\n                                                    : <div className=\"custom-cell\">\n                                                        <div className=\"cell-value\">\n                                                            {displayValue(value.cellValue, key)}\n                                                        </div>\n                                                        {value.show && <Button className=\"edit-btn\" size=\"mini\" onClick={() => toggleEditCell(index, key, value.cellValue)}><i className=\"edit icon edit-icon\"></i></Button>}\n                                                    </div>\n                                                }\n                                            </td>)\n                                    })}\n                                </tr>)\n                        })}\n                    </tbody>\n                </table>\n            )}\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n        </div>\n    )\n}\n","import { TabContent } from './TabContent'\nexport default TabContent\n","import React, { useEffect, useState } from \"react\";\nimport { dataRef, auth } from '../../firebase'\nimport _ from \"lodash\";\nimport { Tab, Button } from 'semantic-ui-react'\nimport \"./tabcontent.scss\";\nimport LogFormPage from '../LogFormPage'\nimport DataPage from '../DataPage'\nimport TablePage from '../TablePage'\n\nexport const TabContent = () => {\n    // check if there has been a log today\n    // useEffect(() => {\n    //     dataRef\n    //         .orderBy('date', 'desc')\n    //         .limit(1)\n    //         .onSnapshot(\n    //             querySnapshot => {\n    //                 querySnapshot.forEach((doc) => {\n    //                     const mostRecentDate = doc.data().date.toDate();\n    //                     // if (sameDay(mostRecentDate, new Date())) {\n    //                     //     setLoggedToday(true);\n    //                     // } else {\n    //                     //     setLoggedToday(false);\n    //                     // }\n    //                 });\n    //             },\n    //             error => {\n    //                 console.log(error);\n    //             }\n    //         )\n    // })\n\n    const panes = [\n        { menuItem: 'Logging Form', render: () => <Tab.Pane><LogFormPage user /></Tab.Pane> },\n        { menuItem: 'Data Analysis', render: () => <Tab.Pane><DataPage user /></Tab.Pane> },\n        {\n            menuItem: 'Table Data', render: () =>\n                <Tab.Pane><TablePage user /></Tab.Pane>\n        },\n    ]\n\n    return (\n        <Tab panes={panes} className=\"tabs-container\" />\n    )\n}\n","import { LoginPage } from './LoginPage'\nexport default LoginPage\n","import React, { useState, useContext } from \"react\";\nimport { provider, auth } from '../../firebase'\nimport { Container, Button, Header } from 'semantic-ui-react'\nimport _ from \"lodash\";\nimport \"./loginpage.scss\";\n\nexport const LoginPage = () => {\n\n    const googleSignIn = () => {\n        auth.signInWithPopup(provider).then((response) => {\n            console.log(response)\n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    return (\n        <Container textAlign=\"center\">\n            <Header as='h1' className=\"title\">Welcome to Day Data</Header>\n            <Header as='h3'>An easy way to track your days and analyze which patterns lead to the best days</Header>\n            <Button color='google plus' onClick={googleSignIn}>Sign in with Google</Button>\n        </Container>\n    )\n}\n","import { MainPage } from './MainPage'\nexport default MainPage\n","import React, { useState, useEffect } from \"react\";\nimport { dataRef, userDoc, auth } from '../../firebase'\nimport _ from \"lodash\";\nimport { Loader, FormField } from 'semantic-ui-react'\nimport \"./mainpage.scss\";\nimport TabContent from '../TabContent'\nimport LoginPage from '../LoginPage'\n\nexport const MainPage = () => {\n\n    // useEffect(() => {\n    //     dataRef\n    //         .get()\n    //         .then(\n    //             querySnapshot => {\n    //                 querySnapshot.forEach((doc) => {\n    //                     console.log(doc.id)\n    //                     console.log(auth.currentUser.uid)\n    //                     dataRef.doc(doc.id).update({ 'newActivity': FieldValue.delete });\n    //                 })\n    //             })\n    // }, [])\n\n    const [loggedIn, toggleLogin] = useState(auth.currentUser != null)\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                toggleLogin(true)\n            } else {\n                toggleLogin(false)\n            }\n            setLoading(false)\n        });\n    }, [auth]);\n\n    return (\n        <div className=\"main-container\">\n            {loading ?\n                <Loader active />\n                : (loggedIn ?\n                    <TabContent />\n                    : <LoginPage />)\n            }\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport MainPage from \"./pages/MainPage\";\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction App() {\n\n  return (\n    <MainPage />\n\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}